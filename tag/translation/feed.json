{
    "version": "https://jsonfeed.org/version/1",
    "title": "Cubic Y³ • All posts by \"translation\" tag",
    "description": "Notes, CTF, DIY, thoughts and waifus.\n\nI'm CubicYYY, an undergraduate student majoring in Computer Science at Zhejiang University.\nLearning: Electric guitar\n❤❤❤ CTF, toy projects, anime\n✖✖✖ Technological supremacy\n✔✔✔ Independent thinking\nResume is [here](https://latexonline.cc/compile?git=https://github.com/cubicYYY/resume&target=resume.tex&command=xelatex).",
    "home_page_url": "http://cubicy.icu",
    "items": [
        {
            "id": "http://cubicy.icu/yoneda/",
            "url": "http://cubicy.icu/yoneda/",
            "title": "[译]Tai-Danae Bradley: 米田视角→米田嵌入→米田引理",
            "date_published": "2024-04-07T18:38:20.000Z",
            "content_html": "<h1 id=\"米田视角-→-米田嵌入-→-米田引理\"><a href=\"#米田视角-→-米田嵌入-→-米田引理\" class=\"headerlink\" title=\"米田视角 → 米田嵌入 → 米田引理\"></a>米田视角 → 米田嵌入 → 米田引理</h1><p><em>注：本标题为译者将三篇文章合而为一后添加。</em><br>原作者： <a href=\"https://www.math3ma.com/about\">Tai-Danae Bradley</a><br>部分图片来源：<a href=\"https://bartoszmilewski.com/2015/09/01/the-yoneda-lemma/\">Bartosz Milewski</a></p>\n<h2 id=\"译者序\"><a href=\"#译者序\" class=\"headerlink\" title=\"译者序\"></a><a name=\"prelude\"></a>译者序</h2><p>米田引理(Yoneda Lemma)往往是新手在学习范畴论时遇到的第一个大障碍，犹如五十音图之于日语初学者。然而就译者本人看来，其难度并非来自于思维上的复杂，而更多来自于符号滥用（让人不禁想问数学整个领域是不是都这样）。尽管一些概念嵌套层数过多对思考确实造成了阻碍，但是通过优秀而无歧义的符号与生动的图示可以大大降低心智负担。本系列作者在这两点上都做得十分出色，故产生了想译为中文的想法。尽管如此，我仍然推荐读者阅读原文，或者至少尽量使用英文的术语以减少歧义。</p>\n<p>为了消除歧义，将本文使用的范畴论记号与称呼列举在此：</p>\n<ul>\n<li>(TODO)</li>\n</ul>\n<p>如果在重新阅读时有迷路的感觉（尤其是第三部分），不知文章行文脉络时，这里有几条锦囊能帮你快速抓住核心，不妨届时试着阅读一番，<strong>如果是初次阅读就请跳过吧</strong>：</p>\n<ul>\n<li>熟悉群论的读者可能会想到凯莱定理(Caylay’s theorem)，也即所有群 G 同构于在 G 上的对称群(即 Sym(G))的子群。事实上，可以认为这个定理是米田引理的一个特例。<ul>\n<li>在群作用语言下的等效表述：如果群作用子 $\\sigma_g: G\\rightarrow \\text{Aut}_{\\text{set}}(S)$ (也就是每个元素对应到一个自同构上)是单射的（也就是单同态），群作用 $G\\times S\\rightarrow S$在某个集合 S（S 可以来自 G 本身）上是忠实的</li>\n<li>为什么<strong>这样的</strong>群作用是忠实的(faithful)？只需要关注单位元在集合 S 中对应的元素 u：此时在不同的自同构下 u 一定被发送(send)到不同元素上。（参见<a href=\"https://www.youtube.com/watch?v=sNX3txN9zc4&\">Chapter 7: Group actions, symmetric group and Cayley’s theorem | Essence of Group Theory</a>）</li>\n<li>接下来你会看到米田引理证明过程中也是通过关注恒等映射这样的“单位元”被发送至何处（这单位元其实如同一个“凝结核”，确定了其被发送至何方后将引发连锁反应，使得所有其他对象的去向被一一确定，后文会详细阐述），从而得出米田嵌入的忠实性。这不是巧合。</li>\n</ul>\n</li>\n<li>米田引理（更准确的说，是推论 1）本质上可以理解为：“人是一切社会关系的总和。”</li>\n<li>对于程序员，可以这么理解：任何数据类型 t 都可以被一些接受 T 类型的函数族 f 所取代。f 接受 t（t 是 T 中的某个值）并执行其余计算——在这个意义上来说，f 即是续延（Continuation）。或者说，f 将所有涉及 T 类型的运算细节封装了起来，因此在外部看来，原本涉及 T 类型的每一次操作只是其他类型之间通过 f(t)进行直接运算（跳过 t）。你也可以理解为这个类型像那些内联函数一样被“内联”了：尽管不再有 T 类型，但对其它类型来说，和 T 类型相关的操作都通过这些 f(t)保留了下来。<ul>\n<li>如果你觉得更抽象了，可以更片面地理解一下：假设你需要做一个操作将 double 截断取整为 int 后再转为 double，这是一个 Double-&gt;Int，再 Int-&gt;Double 的过程。但对于 Double 类型来说，这完全可以通过 floor()函数完成：它是 Double-&gt;Double 的。尽管内部可能仍然有截断为 int 的具体细节，但我们并不关心。那么——假使截断和转为 Double 就是两种类型间所有可能的转换关系（不如直接叫他“态射”吧）——在 Double 类型看来，“我有一个 Int 数 n”和“我有一个函数 f(n):&#x3D;把所有大于等于”n.000”小于”(n+1).000”的 Double 数转为”n.0””这两种说法是等价的，因为这是 Int 类型对 Double 的全部意义（如果你有更多态射，那么就不止有 f(n)，还有 g(n)、h(n)…）。Int 类型内部的运算也保留了：例如 f(5)*f(6)&#x3D;f(30)，显然这是良定义的，这样的替换完全行得通！</li>\n</ul>\n</li>\n</ul>\n<p>每日更新！</p>\n<h2 id=\"1-x2F-3：米田视角-The-Yoneda-Perspective\"><a href=\"#1-x2F-3：米田视角-The-Yoneda-Perspective\" class=\"headerlink\" title=\"1&#x2F;3：米田视角(The Yoneda Perspective)\"></a><a name=\"1\"></a>1&#x2F;3：米田视角(The Yoneda Perspective)</h2><p><em>本节翻译自 <a href=\"https://www.math3ma.com/blog/the-yoneda-perspective\">https://www.math3ma.com/blog/the-yoneda-perspective</a></em></p>\n<p><a href=\"http://blog.sigfpe.com/2006/11/yoneda-lemma.html?m=1\">Dan Piponi</a> 说这是“数学中最难的 trivial 玩意”；<a href=\"https://ncatlab.org/nlab/show/Yoneda+lemma\">nLab</a> 对它的看法是“初等的，深刻的，核心的”；而 <a href=\"http://www.math.jhu.edu/~eriehl/context.pdf\">Emily Riehl</a> 则将其提名为“可以说是范畴论中最重要的结果”。然而，正如 <a href=\"http://www.maths.ed.ac.uk/~tl/categories/yoneda.ps\">Tom Leinster</a> 所指出的，“许多人觉得它非常令人困惑。”<br>他们谈论的是什么？<br><strong>正是米田引理(Yoneda lemma)。</strong></p>\n<p><img src=\"/yoneda/yoneda.jpg\" loading=\"lazy\"></p>\n<p>“但……”你问道，“米田引理是啥？如果它还只是一个引理，那么……天哪……定理是什么？”</p>\n<p>在回答问题之前，我想通过“悠闲地漫步”(leisurely stroll)于其中的两个推论来诱导出这个结果。实际上，话说在前头，我没有在范畴学领域的任何部分“漫步”的资质（译者注：作者的自谦）。的确，有资格为我们展示 Yoneda 引理（译者注：后文我们均如此称呼，因为更常用）这颗闪闪发光的精切钻石的，按理说是范畴学家们，而我不是范畴学家（译者注：依然是作者的自谦）。不过，我就是喜欢跟你讲述一些我所喜欢的事物，而Yoneda引理正是我喜欢的。因此，我们还是于此处相遇了！</p>\n<p>现在我可以选择简单地告诉你推论在我眼里的样子，也可以选择简单地把引理甩给你。但正如 <a href=\"http://www.math.csi.cuny.edu/~maher/\">Joseph Maher</a> 曾经说过的那样：</p>\n<blockquote>\n<p>数学是喜剧的反面，是反笑话(anti-joke)*。我们先告诉你笑点，然后费力地向你解释为什么这个笑点是对的。</p>\n</blockquote>\n<p>所以，首先我要告诉你们一个笑点——关于 Yoneda 引理两个推论的总结。<a href=\"http://www.math3ma.com/mathema/2016/10/6/the-sierpinski-space-and-its-special-property\">我之前在这个博客上提到过它</a>，但我在这个系列中的目标是将它锚定在一个更正规严谨的数学基础上——也就是在费力地解释为什么它是正确的笑点。它是这样一个概念：</p>\n<blockquote>\n<p>数学对象完全由它们与其他对象的关系所决定。</p>\n</blockquote>\n<p>让我们称其为<em>Yoneda视角</em>。简而言之，它表明，如果你想理解对象（集合、群、拓扑空间等等），那么用<a href=\"http://www.math.harvard.edu/~mazur/preprints/when_is_one.pdf\">Barry Mazur</a>的话来说，你会想要理解“它们与同类的、所有其他对象之间的关系网络”。我们已经在几篇帖子中探讨了这个观念——<a href=\"http://www.math3ma.com/mathema/2016/9/12/the-most-obvious-secret-in-mathematics\">The Most Obvious Secret in Mathematics</a>和<a href=\"http://www.math3ma.com/mathema/2016/10/6/the-sierpinski-space-and-its-special-property\">The Sierpinski Space and its Special Property</a>——所以我就不在这里详细展开了。（如果你还没有看过，请务必去看一看！你可以认为这些帖子是本文的前传。）但是我想提一下，Yoneda 视角激发了一种观点，一些数学家——而且这个博客**也越来越多地采纳了这种观点，也即</p>\n<blockquote>\n<p>数学对象的性质比它的定义更重要。</p>\n</blockquote>\n<p>为什么要采用这种观点？因为脱口而出背诵定义很容易：笛卡尔乘积是 blabla…，集合生成的自由群是 blabla…，商拓扑是 blabla…但定义并不总是能说明一切。积是天然带有向内或向外的映射的吗？如果一个自由群的生成集位于另一个群内，这两个群在某种程度上存在联系吗？商空间上的连续函数是什么样子的？这些问题都探询对象的属性——而正是属性定义了对象特征。一旦我们拓宽视角，从对象所存在的范畴这一视角检视对象，答案就会水落石出。</p>\n<p>我想表达的是什么呢？</p>\n<p>假设你想探索对象 X 的性质。现在想象一下，把自己带入另一个对象 Y 的视角。然后问：“从 Y 的视点(vantage point)看起来，X 是什么样的？” 然后现在走到另一个对象 Z 旁，同样设身身处地问：“现在呢？从 Z 这里看，X 是什么样？”一直这么做下去，直到你站在范畴中每个对象的角度都剖析了 X 一遍。最后，你就会收集到大量关于 X 的信息。</p>\n<p>就像<a href=\"https://www.youtube.com/watch?v=vwF7AHTQaoc\">这个片段</a>。从一侧看，片段里的这座雕塑像一头大象；从另一个角度看，它又看起来像两只长颈鹿。但这两个角度都没有给出对雕塑完整的描述。为了真正理解这座雕塑，我们应该从所有可能的视点来观看它。范畴理论也有同样的观点：更多的视点提供了更多的信息。注意，划重点：Yoneda 引理说明：‍</p>\n<blockquote>\n<p><strong>所有</strong>的视点会给出<strong>所有</strong>的信息。</p>\n</blockquote>\n<p>这就是上述 Yoneda 视角的本质，也是思维清晰的数学家如此重视态射、交换图、普遍性质等的原因之一。（不知道你注意到了吗？）这都是关于关系的！当然，这只是一种直觉。实际数学形式是什么样的？那两个推论是什么？我所说的“…物体完全被…决定”究竟是什么意思？什么是“两个物体之间的关系”？我们如何看待“范畴中<em>所有对象的视点</em>”？Yoneda 引理<em>具体</em>是如何捕捉到这一点的？</p>\n<p>这些是我们<a href=\"#2\">下周</a>要回答的问题。<br>顺带一提，想复习一下范畴论吗？这里有几个地方可以起步：<br><a href=\"http://www.math3ma.com/mathema/2017/1/17/what-is-category-theory-anyway\">What is Category Theory, Anyway?</a><br><a href=\"http://www.math3ma.com/mathema/2017/1/23/what-is-a-category\">What’s a Category?</a><br><a href=\"http://www.math3ma.com/mathema/2017/1/31/what-is-a-functor-part-1\">What’s a Functor?</a><br><a href=\"http://www.math3ma.com/mathema/2017/2/6/what-is-a-natural-transformation\">What’s a Natural Transformation?</a></p>\n<hr>\n<p>*: 所以数学家是 cocomedian? (那<a href=\"https://www.instagram.com/p/BLwhFLFgTbE/?taken-by=math3ma\">comathematician</a>是什么?)（译者注：co-这一词根前缀在范畴论中被大量应用，用来表达对偶的、相反的等意味。难道说，这可以说明 coconut 其实就是 nut？）<br>**: 参见 <a href=\"http://www.math3ma.com/mathema/2017/1/17/what-is-category-theory-anyway\">Exhibit A</a> 和 <a href=\"http://www.math3ma.com/mathema/2016/9/12/the-most-obvious-secret-in-mathematics\">Exhibit B</a> 和 <a href=\"http://www.math3ma.com/mathema/2016/10/6/the-sierpinski-space-and-its-special-property\">Exhibit C</a> 和 <a href=\"https://twitter.com/math3ma/status/894700378792611840\">Exhibit D</a> 和 <a href=\"http://www.math3ma.com/mathema/2017/2/22/crumbs\">Exhibit E</a>, 作为例证</p>\n<h2 id=\"2-x2F-3：米田嵌入-The-Yoneda-Embedding\"><a href=\"#2-x2F-3：米田嵌入-The-Yoneda-Embedding\" class=\"headerlink\" title=\"2&#x2F;3：米田嵌入(The Yoneda Embedding)\"></a>2&#x2F;3：<a name=\"2\"></a>米田嵌入(The Yoneda Embedding)</h2><p><em>本节翻译自 <a href=\"https://www.math3ma.com/blog/the-yoneda-embedding\">https://www.math3ma.com/blog/the-yoneda-embedding</a></em></p>\n<p><a href=\"#1\">上周</a>我们开始探讨Yoneda引理。然而，我们并没有直接陈述Yoneda引理本身（因为缺乏动机），而是“悠闲地漫步”于其推论之一———Yoneda视角，也就是：</p>\n<blockquote>\n<p>一个对象完全由其与其他对象的“关系”确定，</p>\n</blockquote>\n<p>也就是：</p>\n<blockquote>\n<p>从范畴中的每个对象的视角看，对象是什么“样子”。</p>\n</blockquote>\n<p>但这让我们不禁想问，“实际数学形式是什么样的？那两个推论是什么推论？”在这篇文章中，我们会尽量找出答案。首先，让我们将这三个抽象叙述背后的具体数学概念具体化：</p>\n<ul>\n<li>“…两个对象之间的<em>关系</em>…”</li>\n<li>“…范畴中<em>每个对象的视点</em>…”</li>\n<li>“…一个对象<em>完全</em>由…<em>表征(characterized)</em>…”</li>\n</ul>\n<p>我们将逐一解密这些叙述方式。接下来，设 Set 表示集合范畴，C 为任意范畴。</p>\n<hr>\n<blockquote>\n<p>“两个对象之间的关系”是指一个态射(morphism)。</p>\n</blockquote>\n<p>假如在 C 中，两个对象 X 和 Y 它们之间存在一个态射，那么我们就说他们“存在关系”。例如，如果X是一个具有<a href=\"http://www.math3ma.com/the-back-pocket/2016/8/26/comparing-topologies\">离散拓扑</a>的拓扑空间，那么从 X 到 Y 就有很多关系——也就是有很多从 X 到 Y 的连续函数——对于任何空间Y。事实上，从一个离散空间出发的<em>所有</em>映射都是连续的。</p>\n<p><img src=\"/yoneda/discrete.jpg\" loading=\"lazy\"></p>\n<p>而反观域范畴，其中的对象之间的关系就非常少了——因为在不同特征(characteristics)的域之间不存在域同态！</p>\n<hr>\n<blockquote>\n<p>“…范畴中<em>每个对象的视点</em>…” 编码在一个函子(functor)中</p>\n</blockquote>\n<p>要“从 C 中所有对象的视点”分析一个对象 X ，我们需要一种方法来跟踪 X 与 C 中所有对象的关系网。这个“关系网”指的就是所有<em>从Z到X</em>和<em>从X到Z</em>的态射集合，也就是这些集合：<br>$$\\text{hom}(Z,X)\\ 与\\ \\text{hom}(X,Z)\\ ,对于范畴\\textbf{C}中的任意对象Z.$$<br>注意到，我们希望C中的<em>每个</em>Z都对应一个不同的集合。一个可行的办法是通过<a href=\"https://www.math3ma.com/blog/what-is-a-functor-part-2\">反变函子(contravariant functor)</a> $\\text{hom}(-,X): \\textbf{C}^{op}\\rightarrow \\textbf{Set}$，它将Z发送到集合$\\text{hom}(Z,X)$，并将态射$f:Z\\rightarrow W$发送到其<a href=\"https://www.math3ma.com/blog/the-sierpinski-space-and-its-special-property\">拉回(pullback)</a> $f^*$，$f^*$则定义为“与f前复合(precomposing)”这一操作（译者注：前复合、后复合的解释参见<a href=\"https://math.stackexchange.com/questions/3889401/what-are-post-composition-and-pre-composition-in-category-theory\">What are post-composition and pre-composition in category theory?</a>，同时请注意区分 $f^*$ 与 $f_*$ 这两个记号以免混淆前复合与后复合）。类似的，对于C中的所有Z，集合$\\text{hom}(X,Z)$都在<a href=\"https://www.math3ma.com/blog/what-is-a-functor-part-1\">协变函子</a> $\\text{hom}(X,-):\\textbf{C}\\rightarrow\\textbf{Set}$的像(image)中。</p>\n<p><img src=\"/yoneda/network.jpg\" loading=\"lazy\"></p>\n<hr>\n<blockquote>\n<p>“一个对象‘完全由…确定’”意味着你知道它是在同构的意义下等价(up to isomorphism)的。</p>\n</blockquote>\n<p>说“一个对象X完全由…确定”意味着X<a href=\"https://www.math3ma.com/blog/up-to-isomorphism\">在同构的意义下</a>是唯一由省略号处内容所表征的对象。比如在本节第一段中，省略号处对应的是“它们与其他对象的关系”。（尽管通常来说省略号处是一个<a href=\"https://jeremykun.com/2013/05/24/universal-properties/\">普适性质</a>。这不足为奇。根据<a href=\"#1\">Yoneda视角</a>，这两种填空是大差不差的！（译者注：确实不知道怎么翻译该句”the two addendums go hand in hand”，此处的两种addendums可能指的是追加在省略号处的可以是“对象带有的普适性质”，也可以是上文的“对象与其他对象的关系”，而这两种答案本质上是一样的））重点在于，如果Y与X以<em>相同</em>的方式与C中的<em>所有</em>其他对象联系——也就是说，如果从整个范畴的视点看，Y看起来就像X一样——那么X和Y一定是同构的。</p>\n<p>例如，假设X和Y是拓扑空间，令$\\cdot$表示单点空间，$I$和$S^1$表示单位区间和圆。那么我们有，</p>\n<ul>\n<li>X和Y具有相同的势(cardinality)当且仅当 $\\text{hom}(\\bullet,X) \\cong \\text{hom}(\\bullet,Y)$</li>\n<li>X和Y具有相同的路径空间(path space)当且仅当 $\\text{hom}(I,X) \\cong \\text{hom}(I,Y)$</li>\n<li>X和Y具有相同的（自由）<a href=\"https://en.wikipedia.org/wiki/Loop_space\">环空间(loop space)</a>当且仅当 $\\text{hom}(S^1,X) \\cong \\text{hom}(S^1,Y)$</li>\n</ul>\n<p><img src=\"/yoneda/probe.jpg\" loading=\"lazy\"></p>\n<p>根据路径空间和环空间的定义，后两点成立。（它们分别是从$I$和$S^1$到$X$的所有连续函数的空间。）而至于第一点，只是因为一个形如$\\bullet \\to X$的映射其实就是在$X$中选择一个点。我们甚至可以说$\\bullet \\to X$是$X$的一个“$\\bullet$塑造的元素”。类似地，一个路径$I \\to X$可以被看作是$X$的一个“$I$塑造的元素”，而一个环$S^1 \\to X$则是一个“$S^1$塑造的元素。” 本质上，我们使用$\\bullet$、$I$和$S^1$来探测(probe)$X$和$Y$。为了洞悉全貌，我们必须用<em>所有</em>空间探测它们——也即从<em>所有</em>空间的视点观察它们。</p>\n<hr>\n<p>在确立这些数学形式之后，“一个对象X完全由X与其他对象的关系所确定”这个说法现在可以明确为两个要点：</p>\n<blockquote>\n<p><strong>要点 #1.</strong> 关于X的一切我们需要知道的东西都被编码在$\\text{hom}(-,X)$中。实际上，对象X<strong>表示</strong>了函子$\\text{hom}(-,X)$。<br><strong>要点 #2.</strong> 当且仅当它们所表示的函子$\\text{hom}(-,X)$和$\\text{hom}(-,Y)$同构时，X和Y才是同构的。</p>\n</blockquote>\n<p>我们现在先考虑第一点，之后再重新审视第二点。所以我们真的能够像第一点说的那样用一个函子来确定一个对象吗？显然存在一个指派<br>$$X \\mapsto \\text{hom}(-, X)$$<br>这是因为范畴 $\\textbf{C}$ 中的任何对象 $X$ 都对应于一个函子 $\\text{hom}(-,X)$，那么这个函子存在于… 呃… 在哪呢？$\\text{hom}(-,X)$ 位于哪里？它也存在于一个范畴中！正如我们很久以前提到的，存在一个范畴 $\\textbf{Set}^{ \\textbf{C}^{op} }$ ，它的对象是从 $\\textbf{C}^{op}$ 到 $\\textbf{Set}$ 的函子，而其态射是自然变换。因此，存在一个函子 $\\mathscr{Y}: \\textbf{C} \\rightarrow \\textbf{Set}^{ \\textbf{C}^{op} }$，它将对象 $X$ 映射到 $\\text{hom}(-, X)$，将一个态射 $f: X \\rightarrow Y$ 映射到自然变换 $f^*: \\text{hom}(-, X) \\rightarrow \\text{hom}(-, Y)$（你应该可以自己验证）。这个自然变换的每个分量都是通过与 $f$ 后合成(postcomposing)得到的。在范畴 $\\textbf{Set}^{ \\textbf{C}^{op} }$ 中的函子被称为预层(presheaf)，我们感兴趣的预层，即形式为 $\\text{hom}(-,X)$ 的预层，被称为<strong>可表示函子</strong>(representable functors)。但是我们需要证明这个命名是否合理： $X$ 真正地、忠实地且最大限度地<em>表示</em>函子 $\\text{hom}(-, X)$ 吗？</p>\n<p>答案是肯定的，但有一个条件：当 $\\mathscr{Y}$ 将 $X$ 发送到预层范畴时，它必须<em>保留</em> $X$ 与 $\\textbf{C}$ 中对象之间的关系。换句话说，对于 $X$ 和 $Y$ 之间的每个关系，应恰好存在<em>一个</em>关系（自然变换）在$\\text{hom}(-, X)$ 和 $\\text{hom}(-, Y)$ 之间。更正式地说，对于 $\\textbf{C}$ 中的每对 $X$ 和 $Y$，由 $f \\mapsto f_*$ 定义的函数<br>$$\\text{hom}(X, Y) \\rightarrow \\textbf{Nat}(\\text{hom}(-, X), \\text{hom}(-, Y))$$<br>应该是一个双射。（记号 $\\textbf{Nat}(-,-)$ 表示从 [留空] 到 [留空] 的自然变换集合（译者注：留空的意思是这里可以是任意 $-$ 处填入的对象）） 。如果 $\\mathscr{Y}$ 满足这个条件，则称其为全忠实(fully faithful)*的并且被称它将范畴 $\\textbf{C}$ <strong>嵌入</strong>到 $Set^{C^{op}}$ 中。</p>\n<p><img src=\"/yoneda/embed.jpg\" loading=\"lazy\"></p>\n<p>但问题来了：</p>\n<p>将 $f$ 映射到 $f_*$ 的函数<br>$$\\text{hom}(X, Y) \\rightarrow \\textbf{Nat}(\\text{hom}(-, X), \\text{hom}(-, Y))$$<br>真的是一个双射吗？</p>\n<p>单射性是显然的：如果 $f, g: X \\rightarrow Y$ 是不同的态射，则它们的推出(pushforward) $f_*$ 和 $g_*$ 显然是不同的。但，满射性呢？给定任意的自然变换 $\\eta: \\text{hom}(-, X) \\rightarrow \\text{hom}(-, Y)$，是否存在一个态射 $f: X \\rightarrow Y$ 使得 $\\eta &#x3D; f_*$？也就是说，<br><strong><em>每个</em>可表示函子之间的自然变换是否都来自于表示了它们的对象之间的态射？</strong></p>\n<p>可能存在大量的自然变换 $\\text{hom}(-, X)$ 和 $\\text{hom}(-, Y)$！没有什么好理由去指望其中的每个都来自于一个 $X \\rightarrow Y$ 的态射。</p>\n<p>然而，出人意料的，还真是！</p>\n<blockquote>\n<p>真就是这样的！</p>\n</blockquote>\n<p>对于每个自然变换 $\\eta: \\text{hom}(-, X) \\rightarrow \\text{hom}(-, Y)$，存在唯一的态射 $f: X \\rightarrow Y$，使得 $\\eta &#x3D; f^*$。</p>\n<p>而<strong>这</strong>正是Yoneda引理直接导出的。</p>\n<p>结果是，$\\mathscr{Y}$ 将 $\\textbf{C}$ 全忠实地嵌入到 $\\textbf{Set}^{ \\textbf{C}^{op} }$ 中。（这是上面提到的“要点 #1”的形式化表述。）因此，$\\mathscr{Y}$ 被称为<strong>Yoneda嵌入</strong>。</p>\n<p>但是，态射 $X \\rightarrow Y$ 与自然变换 $\\text{hom}(-, X) \\rightarrow \\text{hom}(-, Y)$ 之间是双射的这一事实仅仅是Yoneda引理导出的一个<em>结果</em>。正如我们<a href=\"#3\">下周</a>将看到的，Yoneda引理其实是一个更强的结论！它是关于<strong>任意</strong>函子 $F: \\textbf{C}^{op} \\rightarrow \\textbf{Set}$ 的自然变换 $\\text{hom}(-, X) \\rightarrow F$ 的结论。</p>\n<hr>\n<p>* 更一般地，对于任意函子 $F: \\textbf{C} \\rightarrow \\textbf{D}$，存在一个函数 $\\text{hom}<em>{\\textbf{C} }(X, Y) \\rightarrow \\text{hom}</em>{\\textbf{D} }(F(X), F(Y))$，由 $f \\mapsto F(f)$ 给出。如果这个映射是单射，我们说 $F$ 忠实(faithful)；如果它是满射，我们说 $F$ 全射(full)；如果它是双射，我们说 $F$ 全忠实(fully faithful)（译者注：相当于此时我们只关心态射在F作用下的变化情况）。以下是一个方便的<a href=\"http://www.math3ma.com/mathema/2017/7/30/naming-functors\">表格</a>，用于命名其他类型的函子。</p>\n<p>(译者注：方便起见将这个有趣的表格直接附在此处↓)<br><img src=\"/yoneda/naming.jpg\" loading=\"lazy\"></p>\n<h2 id=\"3-x2F-3：米田引理-The-Yoneda-Lemma\"><a href=\"#3-x2F-3：米田引理-The-Yoneda-Lemma\" class=\"headerlink\" title=\"3&#x2F;3：米田引理(The Yoneda Lemma)\"></a>3&#x2F;3：<a name=\"3\"></a>米田引理(The Yoneda Lemma)</h2><p><em>本节翻译自 <a href=\"https://www.math3ma.com/blog/the-yoneda-lemma\">https://www.math3ma.com/blog/the-yoneda-lemma</a></em></p>\n<p><em>未完待续</em></p>\n<h2 id=\"译后记\"><a href=\"#译后记\" class=\"headerlink\" title=\"译后记 \"></a>译后记 <a name=\"postlude\"></a></h2>",
            "tags": [
                "Math",
                "Translation",
                "Theorem"
            ]
        }
    ]
}